<?xml version="1.0" encoding="UTF-8"?>
<database xmlns="http://nouveau.freedesktop.org/"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://nouveau.freedesktop.org/ rules-ng.xsd">
<import file="copyright.xml"/>

<import file="nvchipsets.xml" />
<import file="nv50_vm.xml" />
<import file="nv_pfb.xml" />

<domain name="NV_MMIO" bare="yes" prefix="chipset">

<array name="PFB" offset="0x100000" stride="0x1000" length="1" variants="NV10:NVC0">
	<reg32 offset="0x200" name="CFG0" variants="NV10:NV20 NV34">
		<doc>Address is:
		<ul>
		<li>2-4 bits selecting a byte inside a memory cell [depending on bus width]</li>
		<li>8-9 bits selecting a column</li>
		<li>1 bit selecting a bank</li>
		<li>9-12 bits selecting a row</li>
		<li>0 or 1 more bits selecting a bank</li>
		<li>0 or 1 bits selecting a rank</li>
		</ul></doc>
		<bitfield pos="0" name="TYPE">
			<value value="0" name="SDR"/> <!-- invalid on NV17+ -->
			<value value="1" name="DDR"/>
		</bitfield>
		<bitfield low="4" high="5" name="WIDTH">
			<value value="2" name="32" variants="NV15-"/>
			<value value="0" name="64"/>
			<value value="1" name="128"/>
		</bitfield>
		<bitfield pos="8" name="UNK8"/>
		<bitfield pos="12" name="RANKS">
			<value value="0" name="1"/>
			<value value="1" name="2"/>
		</bitfield>
		<bitfield pos="16" name="BANKS">
			<value value="0" name="2"/>
			<value value="1" name="4"/>
		</bitfield>
		<bitfield low="20" high="23" name="ROWBITS">
			<doc>Valid values: 9-12.</doc>
		</bitfield>
		<bitfield low="24" high="27" name="COLBITS">
			<doc>Valid values: 8-9.</doc>
		</bitfield>
		<bitfield pos="28" name="UNK28" variants="NV10:NV17"/> <!-- something SDR-only? -->
		<bitfield low="29" high="31" name="UNK29" variants="NV15-"/>
	</reg32>

	<reg32 offset="0x200" name="CFG0" variants="NV20:NV34">
		<doc>NV20 addressing for a rank:<ul>
			<li>2 bits selecting byte inside a memory cell</li>
			<li>2 bits selecting a column</li>
			<li>0-2 more bits selecting byte inside a memory cell [depending on bus width]</li>
			<li>6-8 more bits selecting a column</li>
			<li>1 bit selecting a bank</li>
			<li>8-12 bits selecting a row</li>
			<li>0-1 more bits selecting a bank</li>
			</ul>
			NV25 addressing for a rank:<ul>
			<li>2 bits selecting byte inside a memory cell</li>
			<li>2 bits selecting a column</li>
			<li>0-2 more bits selecting byte inside a memory cell [depending on bus width]</li>
			<li>6-8 more bits selecting a column</li>
			<li>1-2 bits selecting a bank</li>
			<li>8-12 bits selecting a row</li>
			</ul>
			Rank B starts right after rank A ends, unless RANK_INTERLEAVE enabled.
		</doc>
		<bitfield low="0" high="3" name="BUS_WIDTH">
			<value value="0" name="32"/>
			<value value="1" name="64"/>
			<value value="3" name="128"/>
			<value value="7" name="256" variants="NV30-"/>
		</bitfield>
		<bitfield low="4" high="5" name="UNK4" variants="NV20:NV25"/>
		<bitfield pos="8" name="RANKS">
			<value value="0" name="A"/>
			<value value="1" name="AB"/>
		</bitfield>
		<bitfield pos="9" name="RANK_INTERLEAVE" variants="NV25-">
			<doc> Rank select bits before row select bits
				instead of after row select bits. Should not be used
				if BANKSA != BANKSB.</doc>
		</bitfield>
		<bitfield pos="11" name="UNK11"/>
		<bitfield low="16" high="19" name="UNK16"/>
		<bitfield low="24" high="25" name="UNK24"/>
		<bitfield low="26" high="27" name="UNK26" variants="NV25-"/>
		<bitfield low="28" high="30" name="UNK28" variants="NV30-"/>
	</reg32>

	<reg32 offset="0x200" name="CFG0" variants="NV50-">
		<bitfield pos="2" name="RANKS">
			<value value="0" name="A"/>
			<value value="1" name="AB"/>
		</bitfield>
	</reg32>

	<reg32 offset="0x204" name="CFG1" variants="NV20:NV34 NV50-">
		<bitfield low="4" high="6" name="UNK4" variants="NV20:NV34"/>
		<bitfield low="8" high="10" name="UNK6" variants="NV20:NV34"/>
		<bitfield low="12" high="15" name="COLBITS">
			<doc> Number of column bits. </doc> <!-- 8-10 valid on NV20 -->
		</bitfield>
		<bitfield low="16" high="19" name="ROWBITSA">
			<doc> Number of row bits used on rank A - 8. </doc> <!-- 1-5 valid on NV20 -->
		</bitfield>
		<bitfield low="20" high="23" name="ROWBITSB">
			<doc> Number of row bits used on rank B - 8. </doc>
		</bitfield>
		<bitfield low="24" high="24" name="BANKBITS" variants="NV50:NVA3">
			<doc> Number of bank bits - 2. </doc>
		</bitfield>
		<bitfield low="24" high="25" name="BANKBITS" variants="NVA3-">
			<doc> Number of bank bits - 2. </doc>
		</bitfield>
		<bitfield pos="24" name="BANKSA" variants="NV20:NV34">
			<doc> Controls how many banks are used on rank A. </doc>
			<value value="0" name="2"/>
			<value value="1" name="4"/>
		</bitfield>
		<bitfield pos="28" name="BANKSB" variants="NV20:NV34">
			<doc> Controls how many banks are used on rank B. </doc>
			<value value="0" name="2"/>
			<value value="1" name="4"/>
		</bitfield>
	</reg32>

	<reg32 offset="0x20c" name="MEM_AMOUNT"> <!-- NVAA+: includes both VRAM and FAKEFB, but only VRAM under VRAM_LIMIT counts -->
		<bitfield pos="0" name="HIGH" type="hex" shr="32" variants="NV50-"/>
		<bitfield high="31" low="12" name="LOW" shr="12"/>
	</reg32>

	<reg32 offset="0x210" name="REFCTRL">
		<bitfield low="0" high="7" name="PUT"/>
		<bitfield low="8" high="15" name="GET"/>
		<bitfield pos="31" name="AUTO_REFRESH"/>
	</reg32>

	<reg32 offset="0x214" name="PRAMIN_WR_PROT" variants="NV10:NV40"> <!-- check vars -->
		<doc>If set, all writes to VRAM from address VRAM_SIZE-(MASK+1)*0x10000
		until the end of VRAM other than via PRAMIN are ignored.</doc>
		<bitfield pos="0" name="ENABLE"/>
		<bitfield low="4" high="7" name="MASK"/>
	</reg32>

	<reg32 offset="0x220" name="MEM_TIMINGS_0" variants="NV30:NV34 NV35:NVC0">
		<doc> This, and the next 7 regs, are all related to memtimings.
			A good place to read might be http://www.tweakers.fr/timings.html .
			Although most bitfields are unknown, they are composed in
			nouveau_mem_timing_init() (nouveau_mem.c, March 30th 2011).
			</doc>
		<bitfield high="7" low="0" name="RC">
			<doc> Row Cycle. </doc>
		</bitfield>
		<bitfield high="15" low="8" name="RFC">
			<doc> Refresh to activate delay. </doc>
		</bitfield>
		<bitfield high="23" low="16" name="tRAS">
			<doc> Row Access Strobe. </doc>
		</bitfield>
		<bitfield high="31" low="24" name="RC">
			<doc> Row cycle time. </doc>
		</bitfield>
	</reg32>

	<reg32 offset="0x224" name="MEM_TIMINGS_1" variants="NV30:NV34 NV35:NVC0">
		<bitfield high="31" low="24" name="tcW2P">
			<doc>
				Write to precharge command delay.
				tWR + (burst length/2) + (tCWL - 1)
			</doc>
		</bitfield>
		<bitfield high="25" low="8" name="tcW2R">
			<doc>
				Write to read command delay.
				tWTR + (burst length/2) + (tCWL - 1)
			</doc>
		</bitfield>
	</reg32>

	<reg32 offset="0x228" name="MEM_TIMINGS_2" variants="NV30:NV34 NV35:NVC0">
		<bitfield high="31" low="28" name="UNK28">
			<doc> 2 on NV30:NV50 </doc>
		</bitfield>
		<bitfield high="27" low="24" name="tCWL">
			<doc> Cas Write Latency </doc>
		</bitfield>
		<bitfield high="23" low="20" name="UNK20">
			<doc> 2 on NV30:NV50 </doc>
		</bitfield>
	</reg32>

	<reg32 offset="0x22c" name="MEM_TIMINGS_3" variants="NV40-">
	</reg32>

	<reg32 offset="0x230" name="MEM_TIMINGS_REFRESH" variants="NV30:NV34 NV35:NV50">
		<doc> Exact workings unknown, but initialized by VBIOS init script </doc>
		<bitfield high="4" low="0" name="LO" />
		<bitfield high="15" low="5" name="VAL" />
	</reg32>

	<reg32 offset="0x230" name="MEM_TIMINGS_4" variants="NV50-">
	</reg32>

	<reg32 offset="0x234" name="MEM_TIMINGS_5" variants="NV40-">
	</reg32>

	<reg32 offset="0x238" name="MEM_TIMINGS_6" variants="NV40-">
	</reg32>

	<reg32 offset="0x23c" name="MEM_TIMINGS_7" variants="NV46-">
	</reg32>

	<reg32 offset="0x240" name="MEM_TIMINGS_8" variants="NV49-">
	</reg32>

	<reg32 offset="0x244" name="MEM_TIMINGS_REFRESH" variants="NV50:NVC0">
		<doc> Exact workings unknown, but initialized by VBIOS init script </doc>
		<bitfield high="4" low="0" name="LO" />
		<bitfield high="15" low="5" name="VAL" />
	</reg32>

	<reg32 offset="0x248" name="MEM_TIMINGS_10" variants="NV94:NVC0">
	</reg32>

	<reg32 offset="0x250" name="BANKCFG" variants="NV50-">
		<doc>Determines which bank is which, and how the banks are reordered for LSR tile_flags.</doc>
		<value value="0" name="REORDER_SIMPLE"/>
		<value value="1" name="REORDER_TIMES3"/>
	</reg32>

	<array offset="0x240" name="TILE_REGION" stride="0x10" length="8" variants="NV10:NV20">
		<reg32 offset="0x00" name="BASE">
			<bitfield low="14" high="26" name="BASE" shr="14"/>
			<bitfield pos="31" name="ENABLE"/>
		</reg32>
		<reg32 offset="0x04" name="LIMIT">
			<bitfield low="14" high="26" name="LIMIT" shr="14"/> <!-- inclusive limit -->
		</reg32>
		<reg32 offset="0x08" name="PITCH">
			<bitfield low="8" high="15" name="PITCH" shr="8"/>
		</reg32>
		<reg32 offset="0x0c" name="STATUS" access="r">
			<bitfield low="0" high="3" name="FACTOR">
				<value value="0" name="1"/>
				<value value="1" name="3"/>
				<value value="2" name="5"/>
				<value value="3" name="7"/>
				<!-- some later card introduced 4 - 13 -->
			</bitfield>
			<bitfield low="4" high="7" name="SHIFT"/>
			<bitfield pos="31" name="VALID"/>
		</reg32>
	</array>

	<array offset="0x2c0" name="RAMCHIP_CFG" stride="0x30" length="1" variants="NV30:NVC0">
		<use-group name="ramchip_cfg" />
	</array>

	<reg32 offset="0x320" name="COMP_MAX_TAG" variants="NV20-"/>

	<array offset="0xc00" name="UNKC00" stride="0x80" length="1" variants="NV50-">
		<reg32 offset="0x08" name="UNK08_SYSRAM_ADDR" shr="8"/>
		<reg32 offset="0x10" name="PM">
			<bitfield low="0" high="4" name="CLIENT">
				<value value="0" name="PFIFO_READ"/>
				<value value="1" name="PFIFO_WRITE"/>
				<value value="2" name="PPPP" variants="NV98:NVA0 NVAA-"/>
				<value value="2" name="PVPE" variants="NV50:NV98 NVA0:NVAA"/>

				<value value="0xb" name="PDISPLAY_UNK0B"/>
				<value value="0xc" name="PDISPLAY_UNK0C"/>
				<value value="0xd" name="PVP" variants="NV84-"/>
				<value value="0xe" name="PBSP" variants="NV84-"/>
				<value value="0xf" name="PCRYPT" variants="NV84:NVA3"/>
				<value value="0x10" name="PCOUNTER" variants="NV84-"/>

				<value value="0x12" name="PDAEMON" variants="NVA3-"/>
				<value value="0x13" name="PCOPY" variants="NVA3-"/>
			</bitfield>
			<bitfield low="8" high="10" name="UNK8" variants="NVA3-"/>
		</reg32>
	</array>

	<array offset="0xc80" name="MMU" stride="0x80" length="1" variants="NV50-">
		<reg32 offset="0x00" name="TLB_FLUSH">
			<bitfield high="19" low="16" name="ENGINE" type="NV50_VM_ENGINE"/>
			<bitfield pos="0" name="TRIGGER"/>
		</reg32>
		<reg32 offset="0x10" name="VM_FAULT">
			<!-- XXX more bits... -->
			<bitfield pos="11" name="PCOPY_ENABLE" variants="NVA3-"/>
			<bitfield pos="16" name="PVP_ENABLE"/>
			<bitfield pos="17" name="PME_ENABLE" variants="NV50:NV84"/>
			<bitfield pos="18" name="PMPEG_ENABLE" variants="NV50:NV98 NVA0:NVAA"/>
			<bitfield pos="18" name="PPPP_ENABLE" variants="NV98:NVA0 NVAA-"/>
			<bitfield pos="19" name="PBSP_ENABLE" variants="NV84-"/>
			<bitfield pos="20" name="PCRYPT_ENABLE" variants="NV84:NVA3"/>
			<bitfield pos="21" name="PCOUNTER_ENABLE" variants="NV84-"/>
			<bitfield pos="23" name="PDAEMON_ENABLE" variants="NVA3-"/>
			<bitfield low="24" high="26" name="INDEX"/>
			<bitfield pos="31" name="PENDING"/>
		</reg32>
		<reg32 offset="0x14" name="VM_FAULT_DATA"/>
		<reg32 offset="0x1c" name="PD_OFFSET" variants="NV84-"/> <!-- offset from channel base to PD, low 3 bits ignored -->
	</array>

	<!-- if FAKEFB is used along with real VRAM, it's appended after VRAM -->
	<reg32 offset="0xe10" name="FAKEFB_BASE" shr="12" align="0x100" variants="NVAA-" access="r"/> <!-- writable through PCI config space -->
	<reg32 offset="0xe14" name="FAKEFB_SIZE" shr="12" align="0x100" variants="NVAA-" access="r"/>
	<reg32 offset="0xe1c" name="VRAM_LIMIT" variants="NVA3-"> <!-- inits to VRAM size; when VRAM size changes, follows it iff currently set equal to VRAM size -->
		<bitfield pos="0" name="HIGH" type="hex" shr="32" variants="NV50-"/>
		<bitfield high="31" low="12" name="LOW" shr="12"/>
	</reg32>

	<array offset="0xf00" name="SYSIF" stride="0x80" length="1" variants="NV50-">
		<reg32 offset="0x04" name="SYSRAM_ADDR_HIGH" shr="40"/> <!-- bits 40-63 of all SYSRAM addresses accessed by the card -->
	</array>
</array>

</domain>

</database>
