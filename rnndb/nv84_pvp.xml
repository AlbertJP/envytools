<?xml version="1.0" encoding="UTF-8"?>
<database xmlns="http://nouveau.freedesktop.org/"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://nouveau.freedesktop.org/ rules-ng.xsd">
<import file="copyright.xml"/>

<import file="nvchipsets.xml" />

<bitset name="nv84_vp2_target" inline="yes">
	<bitfield low="0" high="3" name="DMAIDX"/>
	<bitfield pos="4" name="MODE">
		<value value="0" name="DMAOBJ"/>
		<value value="1" name="PHYS"/>
	</bitfield>
	<bitfield low="5" high="6" name="PHYS_TARGET" type="nv50_mem_target"/>
</bitset>

<group name="nv_xlmi_common">
	<reg32 offset="0x38000" name="UPARM" length="0x40"/>
	<reg32 offset="0x38100" name="XT_REGION_BASE" stride="0x10" length="16" shr="8"/>
	<reg32 offset="0x38104" name="XT_REGION_SETUP" stride="0x10" length="16">
		<bitfield low="0" high="6" name="TARGET" type="nv84_vp2_target"/>
		<bitfield low="8" high="9" name="ENDIAN_SWAP_SIZE">
			<value value="0" name="1"/> <!-- equiivalent to no swapping -->
			<value value="1" name="2"/>
			<value value="2" name="4"/>
			<value value="3" name="8"/>
		</bitfield>
		<bitfield pos="10" name="ENDIAN_SWAP_ENABLE"/>
	</reg32>
	<reg32 offset="0x38108" name="XT_REGION_LIMIT" stride="0x10" length="16" shr="8"/>
	<reg32 offset="0x3810c" name="XT_REGION_SCRATCH" stride="0x10" length="16"/>
	<reg32 offset="0x38208" name="CHANNEL_CUR"/>
	<reg32 offset="0x3820c" name="CHANNEL_NEXT"/>
	<reg32 offset="0x38210" name="DMAOBJ_LOAD" access="w">
		<bitfield low="0" high="15" name="INST"/>
		<bitfield low="16" high="19" name="DMAIDX"/>
	</reg32>
	<reg32 offset="0x38218" name="LIMIT_FAULT_ADDR"/>
	<!-- 3821c engine-specific -->
	<reg32 offset="0x38220" name="FIFO_DATA"/>
	<reg32 offset="0x38224" name="FIFO_MTHD"/>
	<reg32 offset="0x38228" name="FIFO_EMPTY"/>
	<reg32 offset="0x38268" name="X2H_INTR">
		<doc>Write anything to trigger X2H interrupt, read returns 1 if host INTR X2H bit is set, 0 otherwise.</doc>
	</reg32>
	<reg32 offset="0x3826c" name="X2H_INTR_SCRATCH"/>
	<reg32 offset="0x38270" name="UPARM_PULL_ENABLE" access="w"/> <!-- if this and FIFO_CTRL bit 0 enabled, methods 0x400..0x4fc will be automatically processed by moving the value into UPARM regs -->
	<reg32 offset="0x382b8" name="SCRATCH" length="5"/>
	<enum name="nv_vp2_pm_signal" inline="yes">
		<value value="0" name="NOP"/>
		<value value="1" name="CLEAR"/>
		<value value="2" name="PULSE"/>
		<value value="3" name="SET"/>
	</enum>
	<reg32 offset="0x382cc" name="PM_SIGNAL">
		<bitfield low="0" high="1" name="0" type="nv_vp2_pm_signal"/>
		<bitfield low="2" high="3" name="1" type="nv_vp2_pm_signal"/>
		<bitfield low="4" high="5" name="2" type="nv_vp2_pm_signal"/>
		<bitfield low="6" high="7" name="3" type="nv_vp2_pm_signal"/>
		<bitfield low="8" high="9" name="PM_TRIGGER" type="nv_vp2_pm_signal"/>
		<bitfield low="10" high="11" name="WRCACHE_FLUSH" type="nv_vp2_pm_signal"/>
		<bitfield low="12" high="13" name="6" type="nv_vp2_pm_signal"/>
		<bitfield low="14" high="15" name="7" type="nv_vp2_pm_signal"/>
	</reg32>
	<reg32 offset="0x382d4" name="TIME_LOW"/>
	<reg32 offset="0x382d8" name="TIME_HIGH"/>
	<!-- 382dc engine-specific -->
	<reg32 offset="0x382e0" name="SCRATCH_X2H"/>
	<reg32 offset="0x382e4" name="SCRATCH_H2X"/>
</group>

<domain name="NV_PVP_XLMI">
	<use-group name="nv_xlmi_common"/>
	<reg32 offset="0x3821c" name="INTR">
		<bitfield pos="4" name="UNK4"/>
		<bitfield pos="5" name="UNK5"/>
		<bitfield pos="6" name="VM_FAULT"/>
		<bitfield pos="7" name="LIMIT_FAULT"/>
		<bitfield pos="10" name="UNK10"/>
		<bitfield pos="11" name="UNK11"/>
		<bitfield pos="12" name="WATCHDOG"/>
		<bitfield pos="13" name="H2X"/>
	</reg32>
	<reg32 offset="0x382dc" name="FIFO_CTRL">
		<bitfield pos="0" name="UPARM_PULL_ENABLE"/> <!-- if this and 38270 enabled, methods 0x400..0x4fc will be automatically processed by moving the value into UPARM regs -->
		<bitfield pos="4" name="UNK4"/>
		<bitfield pos="8" name="PFIFO_ACCESS"/>
	</reg32>
</domain>

<domain name="NV_PBSP_XLMI">
	<use-group name="nv_xlmi_common"/>
	<reg32 offset="0x3821c" name="INTR">
		<bitfield pos="0" name="BSP"/>
		<bitfield pos="1" name="VUC"/>
		<bitfield pos="2" name="MEMIF"/>
		<bitfield pos="3" name="LIMIT_FAULT"/>
		<bitfield pos="4" name="UNK4"/>
		<bitfield pos="5" name="WATCHDOG"/>
		<bitfield pos="6" name="H2X"/>
		<bitfield pos="7" name="UNK7"/>
		<bitfield pos="8" name="VM_FAULT"/>
		<bitfield pos="9" name="UNK9"/>
	</reg32>
	<reg32 offset="0x382dc" name="FIFO_CTRL">
		<bitfield pos="0" name="UPARM_PULL_ENABLE"/> <!-- if this and 38270 enabled, methods 0x400..0x4fc will be automatically processed by moving the value into UPARM regs -->
		<bitfield pos="4" name="UNK4"/>
		<bitfield pos="8" name="UNK8"/>
		<bitfield pos="12" name="PFIFO_ACCESS"/>
	</reg32>
</domain>

<domain name="NV_MMIO" bare="yes" prefix="chipset">

<group name="nv84_xtensa_common">
	<bitset name="nv84_xtensa_intr" inline="yes">
		<bitfield pos="2" name="X2H"/>
		<bitfield pos="3" name="VM_FAULT"/>
		<bitfield pos="4" name="WATCHDOG"/>
		<bitfield pos="5" name="LIMIT_FAULT"/>
	</bitset>
	<reg32 offset="0x00c" name="UPARM_IDX"/>
	<reg32 offset="0x010" name="UPARM"/>
	<reg32 offset="0x014" name="FIFO_MTHD"/>
	<reg32 offset="0x018" name="FIFO_DATA"/>
	<reg32 offset="0x01c" name="FIFO_STATUS">
		<bitfield pos="0" name="EMPTY"/>
		<bitfield low="4" high="31" name="UNK4"/> <!-- XXX: what's the correct high bit? -->
	</reg32>
	<reg32 offset="0x020" name="INTR" type="nv84_xtensa_intr"/>
	<reg32 offset="0x028" name="CHANNEL_CUR"/>
	<reg32 offset="0x02c" name="CHANNEL_NEXT"/>
	<reg32 offset="0x030" name="XT_REGION_BASE" stride="0xc" length="16" shr="8"/>
	<reg32 offset="0x034" name="XT_REGION_SETUP" stride="0xc" length="16">
		<bitfield low="0" high="6" name="TARGET" type="nv84_vp2_target"/>
		<bitfield low="8" high="9" name="ENDIAN_SWAP_SIZE">
			<value value="0" name="1"/> <!-- equiivalent to no swapping -->
			<value value="1" name="2"/>
			<value value="2" name="4"/>
			<value value="3" name="8"/>
		</bitfield>
		<bitfield pos="10" name="ENDIAN_SWAP_ENABLE"/>
	</reg32>
	<reg32 offset="0x038" name="XT_REGION_LIMIT" stride="0xc" length="16" shr="8"/>

	<reg32 offset="0x0fc" name="HOST_IO_INDEX"/>

	<reg32 offset="0x124" name="XT_INTR_TRIGGER">
		<bitfield pos="0" name="NMI"/>
		<bitfield pos="1" name="H2X"/>
	</reg32>
	<reg32 offset="0x128" name="JOE"/>
	<reg32 offset="0x130" name="XT_REG_ADDR"/>
	<reg32 offset="0x134" name="XT_REG_DATA"/>
	<reg32 offset="0x138" name="XT_PC"/>
	<reg32 offset="0x13c" name="LIMIT_FAULT_ADDR"/>
	<reg32 offset="0x148" name="SCRATCH" length="5" stride="0xc"/>
	<reg32 offset="0x184" name="INTR_EN" type="nv84_xtensa_intr"/> <!-- for host -->
	<reg32 offset="0x18c" name="TIME_LOW"/>
	<reg32 offset="0x190" name="TIME_HIGH"/>
	<reg32 offset="0x19c" name="XT_REGION_SCRATCH" length="16"/>
	<reg32 offset="0x1dc" name="SCRATCH_X2H"/>
	<reg32 offset="0x1e0" name="SCRATCH_H2X"/>
</group>

<array name="PVP" offset="0x00f000" stride="0x1000" length="1" variants="NV84:NV98 NVA0">
	<array offset="0xc00" name="XTENSA" stride="0x400">
		<use-group name="nv84_xtensa_common"/>
		<reg32 offset="0x194" name="FIFO_CTRL">
			<bitfield pos="0" name="UPARM_PULL_ENABLE"/> <!-- if this and 38270 enabled, methods 0x400..0x4fc will be automatically processed by moving the value into UPARM regs -->
			<bitfield pos="4" name="UNK4"/>
			<bitfield pos="8" name="PFIFO_ACCESS"/>
		</reg32>
	</array>
</array>

<array name="PBSP" offset="0x103000" stride="0x1000" length="1" variants="NV84:NV98 NVA0">
	<array offset="0x000" name="BSP" stride="0x200">
		<reg32 offset="0x00" name="PARM_0">
			<bitfield pos="0" name="ENTROPY_CODING_MODE_FLAG"/>
			<bitfield low="1" high="8" name="WIDTH_MB"/>
			<bitfield pos="9" name="MBAFF_FRAME_FLAG"/>
			<bitfield low="10" high="11" name="PICTURE_STRUCTURE">
				<value value="0" name="FRAME"/>
				<value value="1" name="FIELD_TOP"/>
				<value value="2" name="FIELD_BOTTOM"/>
			</bitfield>
			<bitfield low="12" high="16" name="NAL_UNIT_TYPE"/>
			<bitfield pos="17" name="CONSTRAINED_INTRA_PRED"/>
			<bitfield low="18" high="19" name="CABAC_INIT_IDC"/>
			<bitfield pos="20" high="21" name="CHROMA_FORMAT_IDC"/>
			<bitfield pos="22" name="DIRECT_8X8_INFERENCE_FLAG"/>
			<bitfield pos="23" name="TRANSFORM_8X8_MODE_FLAG"/>
		</reg32>
		<reg32 offset="0x04" name="PARM_1">
			<bitfield low="0" high="1" name="SLICE_TYPE">
				<value value="0" name="P"/>
				<value value="1" name="B"/>
				<value value="2" name="I"/>
			</bitfield>
			<bitfield low="2" high="14" name="SLICE_TAG"/>
			<bitfield low="15" high="19" name="NUM_REF_IDX_L0_ACTIVE_MINUS1"/>
			<bitfield low="20" high="24" name="NUM_REF_IDX_L1_ACTIVE_MINUS1"/>
			<bitfield low="25" high="30" name="SLICEQPY"/>
		</reg32>
		<reg32 offset="0x08" name="MB_POS">
			<bitfield low="0" high="12" name="ADDR"/>
			<bitfield low="13" high="20" name="X"/>
			<bitfield low="21" high="28" name="Y"/>
			<bitfield pos="29" name="FIRST"/>
		</reg32>
		<reg32 offset="0x0c" name="COMMAND">
			<bitfield low="0" high="3" name="CMD">
				<value value="0" name="GET_UE"/>
				<value value="1" name="GET_SE"/>
				<value value="2" name="GETBITS"/>
				<value value="3" name="NEXT_START_CODE"/>
				<value value="4" name="CABAC_START"/>
				<value value="5" name="MORE_RBSP_DATA"/>
				<value value="6" name="MB_SKIP_FLAG"/>
				<value value="7" name="END_OF_SLICE_FLAG"/>
				<value value="8" name="CABAC_INIT_CTX"/>
				<value value="9" name="MACROBLOCK_SKIP_MBFDF"/>
				<value value="10" name="MACROBLOCK_LAYER_MBFDF"/>
				<value value="11" name="PRED_WEIGHT_TABLE"/>
				<value value="12" name="SLICE_DATA"/>
			</bitfield>
			<bitfield low="4" high="8" name="PARAM"/>
		</reg32>
		<reg32 offset="0x10" name="STATUS">
			<bitfield pos="0" name="CMD"/>
			<!-- bits like VP3? -->
		</reg32>
		<reg32 offset="0x14" name="RESULT"/>
		<reg32 offset="0x1c" name="INTR_ENABLE">
			<bitfield pos="0" name="UIRQ0"/>
			<bitfield pos="1" name="END_OF_STREAM"/>
			<bitfield pos="2" name="UIRQ2"/>
			<bitfield pos="3" name="MBRING_FULL"/>
			<bitfield pos="4" name="MACROBLOCKS_DONE"/>
		</reg32>
		<reg32 offset="0x20" name="UNK20"/>
		<reg32 offset="0x24" name="INTR">
			<bitfield low="0" high="3" name="INPUT">
				<value value="0" name="NONE"/>
				<value value="1" name="UIRQ0"/> <!-- decode error? -->
				<value value="2" name="END_OF_STREAM"/>
				<value value="3" name="UIRQ2"/>
				<value value="4" name="MACROBLOCKS_DONE"/>
			</bitfield>
			<bitfield pos="4" name="MBRING_FULL"/>
		</reg32>
		<reg32 offset="0x28" name="RESET"/>
		<reg32 offset="0x40" name="STREAM_CONF" stride="8" length="8">
			<bitfield low="0" high="27" name="LENGTH"/>
			<bitfield pos="28" name="ENABLE"/>
		</reg32>
		<reg32 offset="0x44" name="STREAM_OFFSET" stride="8" length="8"/>
		<reg32 offset="0x80" name="STREAM_BITPOS"/> <!-- write starts the stream input engine -->
		<reg32 offset="0x100" name="MBRING_OFFSET"/>
		<reg32 offset="0x104" name="MBRING_HALT_POST"/>
		<reg32 offset="0x108" name="MBRING_WRITE_POS"/>
		<reg32 offset="0x10c" name="MBRING_SIZE"/>
		<reg32 offset="0x110" name="MBRING_TRIGGER">
			<bitfield pos="0" name="FLUSH"/>
			<bitfield pos="1" name="RESET"/>
			<bitfield pos="2" name="RESUME"/>
		</reg32>
	</array>
	<array offset="0x200" name="VUC" stride="0x200">
		<reg32 offset="0x000" name="DATA" length="32"/> <!-- indexed like fµc, but only one word per index, instead of two -->
		<reg32 offset="0x080" name="ICNT"/>
		<reg32 offset="0x084" name="WDCNT"/>
		<reg32 offset="0x088" name="CODE_CONTROL">
			<bitfield low="0" high="10" name="ADDR"/>
			<bitfield pos="16" name="PAUSE"/>
		</reg32>
		<reg32 offset="0x08c" name="CODE_WINDOW"/>
		<reg32 offset="0x090" name="H2V"/>
		<reg32 offset="0x094" name="V2H"/>
		<reg32 offset="0x098" name="PARM">
			<bitfield low="0" high="6" name="WIDTH"/>
			<bitfield pos="8" name="MBAFF_FRAME_FLAG"/>
			<bitfield low="9" high="10" name="SLICE_TYPE"/>
			<bitfield pos="11" name="CHROMA_FORMAT_IDC"/>
			<bitfield pos="12" name="DIRECT_8X8_INFERENCE_FLAG"/>
		</reg32>
		<reg32 offset="0x09c" name="PC"/>
		<group name="nv84_pbsp_vuc_vpring">
			<reg32 offset="0x0" name="OFFSET"/>
			<reg32 offset="0x4" name="HALT_POS"/>
			<reg32 offset="0x8" name="WRITE_POS"/>
			<reg32 offset="0xc" name="SIZE"/>
		</group>
		<array offset="0x0a0" name="VPRING_COEFF" stride="0x10">
			<use-group name="nv84_pbsp_vuc_vpring"/>
		</array>
		<array offset="0x0b0" name="VPRING_MV" stride="0x10">
			<use-group name="nv84_pbsp_vuc_vpring"/>
		</array>
		<array offset="0x0c0" name="VPRING_MBINFO" stride="0x10">
			<use-group name="nv84_pbsp_vuc_vpring"/>
		</array>
		<reg32 offset="0x0d0" name="VPRING_TRIGGER">
			<bitfield pos="0" name="COEFF_FLUSH"/>
			<bitfield pos="1" name="MV_FLUSH"/>
			<bitfield pos="2" name="MBINFO_FLUSH"/>
			<bitfield pos="4" name="COEFF_RESUME"/>
			<bitfield pos="5" name="MV_RESUME"/>
			<bitfield pos="6" name="MBINFO_RESUME"/>
		</reg32>
		<bitset name="nv84_pbsp_vuc_intr" inline="yes">
			<bitfield pos="0" name="VPRING_COEFF_HALT"/>
			<bitfield pos="1" name="VPRING_MV_HALT"/>
			<bitfield pos="2" name="VPRING_MBINFO_HALT"/>
			<bitfield pos="3" name="WATCHDOG"/>
			<bitfield pos="4" name="MBRING_READ_DONE"/>
			<bitfield pos="5" name="UNK5"/>
		</bitset>
		<reg32 offset="0x0d4" name="INTR" type="nv84_pbsp_vuc_intr"/>
		<reg32 offset="0x0d8" name="INTR_EN" type="nv84_pbsp_vuc_intr"/>
		<reg32 offset="0x0dc" name="UNK0DC"/>
		<reg32 offset="0x0e0" name="MVSURF_IN_OFFSET"/>
		<reg32 offset="0x0e4" name="MVSURF_IN_PARM">
			<bitfield low="0" high="7" name="WIDTH"/>
			<bitfield pos="8" name="PROG_FRAME"/> <!-- !field_pic_flag && !mbaff_frame_flag -->
		</reg32>
		<reg32 offset="0x0e8" name="MVSURF_IN_LEFT">
			<bitfield low="0" high="7" name="X"/>
			<bitfield low="8" high="15" name="Y"/>
		</reg32>
		<reg32 offset="0x0ec" name="MVSURF_IN_POS">
			<bitfield low="0" high="11" name="IDX"/>
			<bitfield pos="12" name="FIELD"/>
		</reg32>
		<reg32 offset="0x0f0" name="MVSURF_OUT_OFFSET"/>
		<reg32 offset="0x0f4" name="MVSURF_OUT_PARM">
			<bitfield low="0" high="7" name="WIDTH"/>
			<bitfield pos="8" name="MBAFF_FRAME_FLAG"/>
			<bitfield pos="9" name="FIELD_PIC_FLAG"/>
		</reg32>
		<reg32 offset="0x0f8" name="MVSURF_OUT_LEFT">
			<bitfield low="0" high="7" name="X"/>
			<bitfield low="8" high="15" name="Y"/>
		</reg32>
		<reg32 offset="0x0fc" name="MVSURF_OUT_POS">
			<bitfield low="0" high="12" name="IDX"/>
			<bitfield pos="13" name="UNK13"/>
		</reg32>
		<reg32 offset="0x100" name="MBRING_OFFSET"/>
		<reg32 offset="0x104" name="MBRING_SIZE"/>
		<reg32 offset="0x108" name="MBRING_READ_POS"/>
		<reg32 offset="0x10c" name="MBRING_READ_AVAIL"/>
	</array>
	<array offset="0x400" name="MEMIF" stride="0x200">
		<reg32 offset="0x000" name="STATUS">
			<bitfield low="0" high="5" name="UNK0"/>
			<bitfield low="8" high="11" name="FAULT_TYPE">
				<value value="0" name="NONE"/>
				<value value="1" name="LIMIT"/>
				<value value="2" name="VM"/>
				<value value="3" name="UNK3"/>
			</bitfield>
			<bitfield low="12" high="15" name="FAULT_PORT">
				<value value="0" name="NONE"/>
				<value value="1" name="STREAM"/>
				<value value="2" name="MBRING"/>
				<value value="4" name="MVSURF"/>
			</bitfield>
		</reg32>
		<reg32 offset="0x004" name="FAULT_ADDRESS"/>
		<reg32 offset="0x00c" name="INTR">
			<bitfield pos="0" name="FAULT"/>
			<bitfield pos="4" name="UNK4"/> <!-- *not* an interrupt -->
		</reg32>
		<reg32 offset="0x020" name="STREAM_BASE" shr="8"/>
		<reg32 offset="0x024" name="STREAM_TARGET" type="nv84_vp2_target"/>
		<reg32 offset="0x028" name="STREAM_LIMIT" shr="8"/>
		<reg32 offset="0x030" name="VPRING_BASE" shr="8"/>
		<reg32 offset="0x034" name="VPRING_TARGET" type="nv84_vp2_target"/>
		<reg32 offset="0x038" name="VPRING_LIMIT" shr="8"/>
		<reg32 offset="0x040" name="MVSURF_BASE" shr="8"/>
		<reg32 offset="0x044" name="MVSURF_TARGET" type="nv84_vp2_target"/>
		<reg32 offset="0x048" name="MVSURF_LIMIT" shr="8"/>
		<reg32 offset="0x050" name="MBRING_BASE" shr="8"/>
		<reg32 offset="0x054" name="MBRING_TARGET" type="nv84_vp2_target"/>
		<reg32 offset="0x058" name="MBRING_LIMIT" shr="8"/>
	</array>
	<array offset="0xc00" name="XTENSA" stride="0x400">
		<use-group name="nv84_xtensa_common"/>
		<reg32 offset="0x194" name="FIFO_CTRL">
			<bitfield pos="0" name="UPARM_PULL_ENABLE"/> <!-- if this and 38270 enabled, methods 0x400..0x4fc will be automatically processed by moving the value into UPARM regs -->
			<bitfield pos="4" name="UNK4"/>
			<bitfield pos="8" name="UNK8"/>
			<bitfield pos="12" name="PFIFO_ACCESS"/>
		</reg32>
	</array>
</array>

</domain>

</database>
