<?xml version="1.0" encoding="UTF-8"?>
<database xmlns="http://nouveau.freedesktop.org/"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://nouveau.freedesktop.org/ rules-ng.xsd">
<import file="copyright.xml"/>

<import file="nvchipsets.xml" />

<domain name="NV03_DMA">
	<reg32 offset="0" name="FLAGS">
		<bitfield high="11" low="0" name="ADJUST"/>
		<bitfield pos="16" name="PRESENT"/>
		<bitfield high="25" low="24" name="TARGET">
			<value value="0" name="VRAM"/>
			<value value="2" name="PCI" />
			<value value="3" name="AGP" /> <!-- guess... -->
		</bitfield>
	</reg32>
	<reg32 offset="4" name="LIMIT"/>
	<reg32 offset="8" name="PTE" length="0">
		<bitfield pos="0" name="PRESENT"/>
		<bitfield pos="1" name="W"/>
		<bitfield high="31" low="12" name="FRAME" shr="12"/>
	</reg32>
</domain>

<domain name="NV01_RAMRO">
	<doc>The FIFO runout area. If the PIO pusher receives a MMIO
	access that for some reason cannot be transformed to valid command
	and written to PFIFO caches, it ends up here and interrupt is raised.
	The RAMRO can be 512 bytes [64 entries] or 8kB [1024 entries] in size,
	depending on NV01_PFIFO_RAMRO_SIZE setting.</doc>
	<stripe stride="8" length="0">
		<reg32 offset="0" name="ADDR">
			<doc>The address and some info about the faulting
			access. MTHD, SUBCH, CHID correspond directly to
			bits 2-22 of offset inside the USER area.</doc>
			<bitfield high="12" low="2" name="MTHD" shr="2"/>
			<bitfield high="15" low="13" name="SUBCH"/>
			<bitfield high="22" low="16" name="CHID"/>
			<bitfield pos="23" name="TYPE">
				<value value="0" name="WRITE"/>
				<value value="1" name="READ"/>
			</bitfield>
			<bitfield high="27" low="24" name="BYTE_ENABLE">
				<doc>The <b>inverted</b> mask of active
				bytes in the faulting access.</doc>
			</bitfield>
			<bitfield high="31" low="28" name="REASON">
				<value value="0" name="ILLEGAL_ACCESS">
					<doc>You tried to read a normal method,
					or write the FREE "method".</doc>
				</value>
				<value value="1" name="NO_CACHE_AVAILABLE">
					<doc>The access was otherwise ok, but
					the PFIFO caches were for some reason
					unavailable to store the command. This
					includes: disabled push access, caches
					occupied by another channel's data,
					caches set to another channel and
					REASSIGN disabled.</doc>
				</value>
				<value value="2" name="CACHE_RAN_OUT">
					<doc>The access was otherwise ok, but
					there was already some data in RAMRO
					for the current channel, and it was
					dropped anyway to avoid reordering
					commands.</doc>
				</value>
				<value value="3" name="FREE_COUNT_OVERRUN">
					<doc>The access was otherwise ok, but
					PFIFO caches were full already, and
					the user forgot to check the FREE
					"method" before pushing.</doc>
				</value>
				<value value="4" name="CAUGHT_LYING">
					<doc>The card lied about free space in
					PFIFO caches and got more than it was
					able to take.</doc>
				</value>
				<value value="5" name="RESERVED_ACCESS">
					<doc>You tried to write into
					a nonexistent address in 0-0xfc area.
					</doc>
				</value>
			</bitfield>
		</reg32>
		<reg32 offset="4" name="DATA"/>
	</stripe>
</domain>

<domain name="NV01_RAMFC">
	<reg32 offset="0" name="CTX" length="8">
		<bitfield low="0" high="15" name="ENGDATA"/>
		<bitfield low="16" high="22" name="ADDR" shr="16"/>
		<bitfield pos="24" name="FREE_LIE" variants="NV01:NV03"/>
		<bitfield low="28" high="30" name="SUBCHANNEL"/> <!-- duplicated over all subchannels -->
	</reg32>
</domain>

</database>
