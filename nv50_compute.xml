<?xml version="1.0" encoding="UTF-8"?>
<database xmlns="http://nouveau.freedesktop.org/"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://nouveau.freedesktop.org/ rules-ng.xsd">

<enum name="nv50_cond_mode" inline="yes">
	<value value="0" name="NEVER"/>
	<value value="1" name="ALWAYS"/>
	<value value="2" name="RES"/>
	<value value="3" name="NOT_RES_AND_NOT_ID"/>
	<value value="4" name="RES_OR_ID"/>
</enum>

<enum name="obj-class" bare="yes">
	<value value="0x50c0" name="NV50_COMPUTE"/>
	<value value="0x85c0" name="NVA3_COMPUTE"/>
</enum>

<domain name="NV01_SUBCHAN" bare="yes" size="0x2000">
	<stripe prefix="obj-class" variants="NV50_COMPUTE-NVA3_COMPUTE">
		<reg32 offset="0x0100" name="NOP"/>
		<reg32 offset="0x0104" name="NOTIFY"/>
		<reg32 offset="0x0110" name="SERIALIZE"/>
		<reg32 offset="0x0140" name="UNK0140"/>
		<reg32 offset="0x0180" name="DMA_NOTIFY" type="object"/>
		<reg32 offset="0x01a0" name="DMA_GLOBAL" type="object"/>
		<reg32 offset="0x01a4" name="DMA_QUERY" type="object"/>
		<reg32 offset="0x01b8" name="DMA_LOCAL" type="object"/>
		<reg32 offset="0x01bc" name="DMA_STACK" type="object"/>
		<reg32 offset="0x01c0" name="DMA_CODE_CB" type="object"/>
		<reg32 offset="0x01c4" name="DMA_TSC" type="object"/>
		<reg32 offset="0x01c8" name="DMA_TIC" type="object"/>
		<reg32 offset="0x01cc" name="DMA_TEXTURE" type="object"/>
		<reg32 offset="0x0210" name="CP_ADDRESS_HIGH" type="hexa"/>
		<reg32 offset="0x0214" name="CP_ADDRESS_LOW" type="hexa"/>
		<reg32 offset="0x0218" name="STACK_ADDRESS_HIGH" type="hexa"/>
		<reg32 offset="0x021c" name="STACK_ADDRESS_LOW" type="hexa"/>
		<reg32 offset="0x0220" name="STACK_SIZE_LOG" type="int"/> <!-- log2(number_of_entries)+1. 1-0xd, or 0 to disable stack. note that stack is always at least 4 entries, vals 1 and 2 are equivalent to 3. -->
		<reg32 offset="0x022c" name="TSC_ADDRESS_HIGH"/>
		<reg32 offset="0x0230" name="TSC_ADDRESS_LOW"/>
		<reg32 offset="0x0234" name="TSC_LIMIT" type="int"/> <!-- number of entries - 1 -->
		<reg32 offset="0x0238" name="CB_ADDR" type="bitfield">
			<bitfield name="ID" high="21" low="8" type="int"/>
			<bitfield name="BUFFER" high="6" low="0" type="int"/>
		</reg32>
		<reg32 offset="0x023c" name="CB_DATA" length="16" type="float"/>
		<reg32 offset="0x0284" name="DELAY1" type="hexa"/> <!-- writing x causes GPU to do nothing for exactly 2*x clocks. -->
		<reg32 offset="0x0288" name="WATCHDOG_TIMER" type="int"/> <!-- writing 0 disables watchdog, writing 1-31 causes program to be killed after 7*2^(x-1) clocks. -->
		<reg32 offset="0x028c" name="DELAY2" type="hexa"/> <!-- looks same as DELAY1 -->
		<reg32 offset="0x0290" name="UNK0290"/>
		<reg32 offset="0x0294" name="LOCAL_ADDRESS_HIGH" type="hexa"/>
		<reg32 offset="0x0298" name="LOCAL_ADDRESS_LOW" type="hexa"/>
		<reg32 offset="0x029c" name="LOCAL_SIZE_LOG" type="int"/> <!-- log2(size_in_bytes/8). 1-0xd, or 0 to disable local. -->
		<reg32 offset="0x02a4" name="CB_DEF_ADDRESS_HIGH" type="hexa"/>
		<reg32 offset="0x02a8" name="CB_DEF_ADDRESS_LOW" type="hexa"/>
		<reg32 offset="0x02ac" name="CB_DEF_SET" type="bitfield">
			<bitfield name="SIZE" high="15" low="0" type="int"/>
			<bitfield name="BUFFER" high="22" low="16" type="int"/>
		</reg32>
		<reg32 offset="0x02b4" name="BLOCK_ALLOC" type="bitfield">
			<bitfield name="THREADS" high="15" low="0" type="int"/> <!-- more than ntid.x*ntid.y*ntid.z == error, less == remaining tids not executed -->
			<bitfield name="BARRIERS" high="31" low="16" type="int"/>
		</reg32>
		<reg32 offset="0x02b8" name="UNK02B8_LANE"/> <!-- init to 1: NEEDED for 32 lanes. only accepts 0 and 1? -->
		<reg32 offset="0x02c0" name="CP_REG_ALLOC_TEMP" type="hexa"/>
		<reg32 offset="0x02c4" name="TIC_ADDRESS_HIGH"/>
		<reg32 offset="0x02c8" name="TIC_ADDRESS_LOW"/>
		<reg32 offset="0x02cc" name="TIC_LIMIT" type="int"/> <!-- number of entries - 1 -->
		<reg32 offset="0x02d0" name="PM_SET" type="hexa" length="4"/> <!-- just sets corresponding pm register. -->
		<reg32 offset="0x02e0" name="PM_CONTROL" length="4" type="bitfield"> <!-- *very* weird. -->
			<bitfield name="UNK0" high="0" low="0" type="int"/> <!-- disable bit? -->
			<bitfield name="UNK1" high="6" low="4" type="int"/> <!-- valid values are 0-5 -->
			<bitfield name="UNK2" high="31" low="8" type="hexa"/>
		</reg32>
		<reg32 offset="0x02f8" name="UNK02F8_INIT"/> <!-- set to 1 after setting up grid/block dimensions, otherwise error. -->
		<reg32 offset="0x02fc" name="LOCAL_WARPS_LOG_ALLOC" type="int"/> <!-- number of bits in l[] addressing used for warp number. as a twist, 5 is invalid. use 7 if you want 5. valid vals 0-4 and 7 -->
		<reg32 offset="0x0300" name="LOCAL_WARPS_NO_CLAMP" type="boolean"/> <!-- if not set, clamp number of executed warps to allocated above. if set, ignore it, the extra warps will alias. -->
		<reg32 offset="0x0304" name="STACK_WARPS_LOG_ALLOC" type="int"/> <!-- number of bits in stack addressing used for warp number. as a twist, 5 is invalid. use 7 if you want 5. valid vals 0-4 and 7 -->
		<reg32 offset="0x0308" name="STACK_WARPS_NO_CLAMP" type="boolean"/> <!-- if not set, clamp number of executed warps to allocated above. if set, ignore it, the extra warps will alias. -->
		<reg32 offset="0x0310" name="QUERY_ADDRESS_HIGH" type="hexa"/>
		<reg32 offset="0x0314" name="QUERY_ADDRESS_LOW" type="hexa"/>
		<reg32 offset="0x0318" name="QUERY_COUNTER" type="hexa"/>
		<reg32 offset="0x031c" name="QUERY_GET" type="hexa"/> <!-- only seen 0 -->
		<reg32 offset="0x0320" name="COND_ADDRESS_HIGH" type="hexa"/>
		<reg32 offset="0x0324" name="COND_ADDRESS_LOW" type="hexa"/>
		<reg32 offset="0x0328" name="COND_MODE" type="nv50_cond_mode"/>
		<reg32 offset="0x0368" name="LAUNCH"/>
		<reg32 offset="0x0374" name="USER_PARAM_COUNT" type="bitfield">
			<bitfield name="COUNT" high="15" low="8" type="int"/> <!-- max 64 -->
		</reg32>
		<reg32 offset="0x0378" name="LINKED_TSC" type="boolean"/>
		<reg32 offset="0x0380" name="CODE_CB_FLUSH"/> <!-- works with writing 0, but appears to accept values 0-3... what do they do, if anything? -->
		<reg32 offset="0x0384" name="UNK0384"/> <!-- init to 0x100, not setting bit 8 results in only block 0,0 getting executed -->
		<reg32 offset="0x0388" name="GRIDID" type="hexa"/> <!-- 16 bits -->
		<reg32 offset="0x03a4" name="GRIDDIM" type="bitfield">
			<bitfield name="X" high="15" low="0" type="int"/>
			<bitfield name="Y" high="31" low="16" type="int"/>
		</reg32>
		<reg32 offset="0x03a8" name="SHARED_SIZE" type="hexa"/> <!-- needs to be a multiple of 0x40 bytes, max 16kB? -->
		<reg32 offset="0x03ac" name="BLOCKDIM_YX" type="bitfield">
			<bitfield name="X" high="15" low="0" type="int"/>
			<bitfield name="Y" high="31" low="16" type="int"/>
		</reg32>
		<reg32 offset="0x03b0" name="BLOCKDIM_Z" type="int"/>
		<reg32 offset="0x03b4" name="CP_START_ID"/>
		<reg32 offset="0x03b8" name="WARP_HALVES" type="int"/> <!-- 1 or 2 -->
		<reg32 offset="0x03bc" name="TEX_LIMITS" type="bitfield">
			<bitfield name="SAMPLERS_LOG2" high="3" low="0" type="int"/>
			<bitfield name="TEXTURES_LOG2" high="7" low="4" type="int"/>
		</reg32>
		<reg32 offset="0x03c0" name="BIND_TSC" type="bitfield">
			<bitfield name="VALID" high="0" low="0" type="boolean"/>
			<bitfield name="SAMPLER" high="7" low="4" type="int"/>
			<bitfield name="TSC" high="20" low="12" type="int"/>
		</reg32>
		<reg32 offset="0x03c4" name="BIND_TIC" type="bitfield">
			<bitfield name="VALID" high="0" low="0" type="boolean"/>
			<bitfield name="TEXTURE" high="8" low="1" type="int"/>
			<bitfield name="TIC" high="30" low="9" type="int"/>
		</reg32>
		<reg32 offset="0x03c8" name="SET_PROGRAM_CB" type="bitfield">
			<bitfield name="INDEX" high="11" low="8" type="int"/>
			<bitfield name="BUFFER" high="18" low="12" type="int"/>
			<bitfield name="VALID" high="0" low="0" type="boolean"/>
		</reg32>
		<stripe offset="0x0400" name="GLOBAL" length="16" stride="0x20">
			<reg32 offset="0x00" name="ADDRESS_HIGH" type="hexa"/>
			<reg32 offset="0x04" name="ADDRESS_LOW" type="hexa"/>
			<reg32 offset="0x08" name="PITCH" type="hexa"/> <!-- multiple of 0x100 bytes, max 0x800000 -->
			<reg32 offset="0x0c" name="LIMIT" type="hexa"/> <!-- low 16-bit LINE_LIMIT, high 16-bit HEIGHT-1 in case of 2D surface -->
			<reg32 offset="0x10" name="MODE" type="bitfield">
				<bitfield name="LINEAR" high="0" low="0" type="bool"/>
				<bitfield name="TILE_MODE" high="11" low="8" type="hexa"/>
			</reg32>
		</stripe>
		<reg32 offset="0x0600" name="USER_PARAM" length="64" type="hexa"/>
	</stripe>
</domain>

</database>
