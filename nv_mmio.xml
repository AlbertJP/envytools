<?xml version="1.0" encoding="UTF-8"?>
<database xmlns="http://nouveau.freedesktop.org/"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://nouveau.freedesktop.org/ rules-ng.xsd">
<import file="copyright.xml"/>

<import file="nvchipsets.xml" />
<import file="nv50_defs.xml" />

<domain name="NV_MMIO" bare="yes" prefix="chipset">
	<array offset="0x000000" name="PMC" stride="0x1000" length="1">
		<doc>Master Control. Contains various registers not tied to
		any specific engine.</doc>
		<reg32 offset="0x000" name="BOOT_0">
			<doc>Tells you what card this is. Note that this reg has
			a different format on NV01/NV03, on NV04/NV05, and on NV10+.
			So first you need to figure out the format... if bits 24-27
			are non-0, you have NV10+. Otherwise, if bits 12-15 are 4,
			you have NV04/NV05. In other cases, you have pre-NV04.</doc>
			<bitfield low="24" high="27" name="ALWAYS0_1" variants="NV01:NV10"/>

			<bitfield low="12" high="15" name="ALWAYS0_2" variants="NV01:NV04"/>
			<bitfield low="16" high="19" name="CHIPSET" variants="NV01:NV04">
				<value value="1" name="NV01"/>
				<value value="2" name="NV02"/>
				<value value="3" name="NV03"/>
			</bitfield>
			<bitfield low="0" high="7" name="REVISION" variants="NV01:NV04">
				<doc>Less than 0x20 is original NV03, 0x20
				and up is NV03P.</doc>
			</bitfield>

			<bitfield low="12" high="15" name="ALWAYS4" variants="NV04:NV10"/>
			<bitfield low="20" high="23" name="MAJOR" variants="NV04:NV10">
				<doc>0 is NV04, non-0 are NV05+</doc>
			</bitfield>

			<bitfield low="0" high="7" name="STEPPING" variants="NV10-"/>
			<bitfield low="20" high="27" name="CHIPSET" type="chipset" variants="NV10-">
				<doc>The card chipset. This is THE two-digit hex
				number that goes after "NV".
				</doc>
			</bitfield>
		</reg32>
		<reg32 offset="0x004" name="BOOT_1" variants="NV11-">
			<doc>Endian switch. Write 0x00000001 in your favorite
			endianness to switch the card to this endianness. This
			switch, if set to big-endian mode, causes all accesses
			to MMIO and RAMIN BARs to be byte-swapped [xor all byte
			addresses with 3], except for areas containing 8-bit
			legacy VGA registers. Accesses to framebuffer BAR
			aren't affected.

			When read, returns 0 if in little-endian mode,
			0x01000001 if in big-endian mode.

			TODO: Check how to byte-swap PFIFO pushbuffers.</doc>
		</reg32>
		<reg32 offset="0x100" name="INTR">
			<doc>Shows currently pending interrupts. Read-only, except
			for SOFTWARE bit. No need to ack these, they disappear by
			acking in upstream unit.</doc>
			<bitfield pos="0" name="PAUDIO" variants="NV01"/>
			<bitfield pos="0" name="PVPE" variants="NV17:NV98 NVA0"/>
			<bitfield pos="0" name="PPPP" variants="NV98 NVAA-"/>
			<bitfield pos="4" name="PDMA" variants="NV01"/>
			<bitfield pos="4" name="PMEDIA" variants="NV03-"/>
			<bitfield pos="8" name="PFIFO" />
			<bitfield pos="12" name="PGRAPH" />
			<bitfield pos="14" name="PCRYPT" variants="NV84:NVA3"/>
			<bitfield pos="15" name="PBSP" variants="NV84-"/>
			<bitfield pos="16" name="PRM" variants="NV01"/>
			<bitfield pos="16" name="PVIDEO" variants="NV03-NV40"/>
			<bitfield pos="17" name="PVP" variants="NV40-"/>
			<bitfield pos="18" name="PDAEMON" variants="NVA3-"/>
			<bitfield pos="20" name="PTIMER" />
			<bitfield pos="21" name="PCONNECTOR" variants="NV50-"/>
			<bitfield pos="22" name="PCOPY" variants="NVA3:NVC0"/>
			<bitfield pos="24" name="PFB" variants="NV01"/>
			<bitfield pos="24" name="PCRTC" variants="NV03:NV50"/>
			<bitfield pos="25" name="PCRTC2" variants="NV11:NV50"/>
			<bitfield pos="26" name="PDISPLAY" variants="NV50-"/>
			<bitfield pos="28" name="SOFTWARE" variants="NV01"/>
			<bitfield pos="28" name="PBUS" variants="NV03-"/>
			<bitfield pos="31" name="SOFTWARE" variants="NV03-">
				<doc>Software interrupt: write 1 to this bit to trigger
				interrupt, write 0 to stop.</doc>
			</bitfield>
		</reg32>
		<reg32 offset="0x140" name="INTR_EN">
			<doc>Enables reporting interrupts via IRQ lines. Doesn't affect
			status shown in PMC_INTR, only sending actual bus interrupts.</doc>
			<bitfield pos="0" name="HARDWARE">
				<doc>Enable reporting hardware interrupts, ie. all but SOFTWARE.</doc>
			</bitfield>
			<bitfield pos="1" name="SOFTWARE">
				<doc>Enable reporting software interrupts.</doc>
			</bitfield>
		</reg32>
		<reg32 offset="0x200" name="ENABLE">
			<doc>Selects which card units are enabled.</doc>
			<bitfield pos="0" name="PAUDIO" variants="NV01"/>
			<!-- might be HDVP video decoding -->
			<bitfield pos="0" name="UNK0" variants="NV03:NV04 NV10-"/>
			<!-- I wonder how much modern NVA0 VPE has in common with the original NV17 thing. oh meh. we'll find out some day.-->
			<bitfield pos="1" name="PVPE" variants="NV17:NV98 NVA0"/> <!-- also controls NV50:NV98, NVA0 PVP -->
			<bitfield pos="1" name="PPPP" variants="NV98 NVAA-"/>
			<bitfield pos="2" name="PGUNK13B" variants="NVC0-"/>
			<bitfield pos="3" name="PRUNK140" variants="NVC0-"/>
			<bitfield pos="4" name="PDMA" variants="NV01"/>
			<bitfield pos="4" name="PMEDIA" variants="NV03-"/>
			<bitfield pos="5" name="MASTER" variants="NVC0-"/> <!-- disable that and most of MMIO disappears -->
			<bitfield pos="6" name="PCOPY" variants="NVC0-"/>
			<bitfield pos="7" name="PCOPY2" variants="NVC0-"/>
			<bitfield pos="8" name="PFIFO" />
			<bitfield pos="12" name="PGRAPH" />
			<bitfield pos="13" name="PCOPY" variants="NVA3:NVC0"/>
			<bitfield pos="13" name="PDAEMON" variants="NVC0-"/>
			<bitfield pos="14" name="PCRYPT" variants="NV84:NVA3"/>
			<bitfield pos="15" name="PBSP" variants="NV84-"/>
			<bitfield pos="16" name="PRM" variants="NV01"/>
			<bitfield pos="16" name="PTIMER" variants="NV03-"/>
			<bitfield pos="17" name="PVP" variants="NV98 NVAA-"/>
			<bitfield pos="20" name="PFB" variants="NV03:NVC0"/>
			<bitfield pos="20" name="PBFB" variants="NVC0-"/>
			<bitfield pos="24" name="PFB" variants="NV01"/>
			<bitfield pos="24" name="PCRTC" variants="NV03:NV50"/>
			<bitfield pos="25" name="PCRTC2" variants="NV11:NV50"/>
			<bitfield pos="26" name="PTV" variants="NV17:NV20 NV30:NV50"/>
			<bitfield pos="27" name="UNK27" variants="NVC0-"/>
			<bitfield pos="28" name="PVIDEO" variants="NV03:NV50"/>
			<bitfield pos="28" name="PGUNK180" variants="NVC0-"/>
			<bitfield pos="29" name="PFFB" variants="NVC0-"/>
			<bitfield pos="30" name="PDISPLAY" variants="NV50-"/>
			<bitfield pos="31" name="UNK31" variants="NV50-"/>
			<!-- XXX: NV84:NVC0 have lots of other bits that apparently don't affect anything, but not really. -->
		</reg32>
		<reg32 offset="0x204" name="SUBFIFO_ENABLE" variants="NVC0-">
			<bitfield pos="0" name="0"/>
			<bitfield pos="1" name="1"/>
			<bitfield pos="2" name="2"/>
		</reg32>
	</array>
	<array offset="0x1000" name="PBUS" stride="0x1000" length="1">
		<reg32 offset="0x100" name="INTR">
			<bitfield pos="3" name="MMIO_FAULT"/>
			<bitfield pos="26" name="PMS"/>
		</reg32>
		<reg32 offset="0x140" name="INTR_EN">
			<bitfield pos="3" name="MMIO_FAULT"/>
			<bitfield pos="26" name="PMS"/>
		</reg32>
		<reg32 offset="0x150" name="INTR_PMS_TRIGGER"/>
		<stripe variants="NV17-">
			<reg32 offset="0x304" name="PMS_CONTROL">
			</reg32>
			<reg32 offset="0x308" name="PMS_STATE">
				<bitfield low="0" high="7" name="IP"/>
				<bitfield pos="8" name="ACTIVE"/>
			</reg32>
			<reg32 offset="0x30c" name="PMS_TRIGGER">
				<bitfield pos="0" name="START"/>
			</reg32>
			<reg8 offset="0x400" name="PMS_CODE" length="0x100"/>
		</stripe>
		<reg32 offset="0x540" name="PGRAPH_UNITS" variants="NV50:NVC0">
			<doc>Enables PGRAPH engines that come in multiple copies.
			</doc>
			<bitfield high="15" low="0" name="TP_MASK">
				<doc>Selects which TPs are enabled</doc>
			</bitfield>
			<bitfield high="23" low="16" name="ROPC_MASK">
				<doc>Selects which ROP clusters are enabled</doc>
			</bitfield>
			<bitfield high="27" low="24" name="MP_MASK">
				<doc>Selects which MPs inside each TP are enabled</doc>
			</bitfield>
			<bitfield high="31" low="28" name="UNK_MASK">
				<doc>Unknown, always starts as 0b1111. Not setting
				bit 28 causes the card to die. Not setting bits
				29-31 has no obvious effects.
				</doc>
			</bitfield>
		</reg32>
		<reg32 offset="0x570" name="PEEPHOLE_ADDR" variants="NV30-NV50">
			<doc>Virtual address to poke.</doc>
		</reg32>
		<reg32 offset="0x574" name="PEEPHOLE_DATA" variants="NV30-NV50">
			<doc>Goes to the memory at address pointed to by ADDR.
			Auto-increments ADDR on each access.</doc>
		</reg32>
		<reg32 offset="0x700" name="PMEM_START" variants="NV50-">
			<doc>Selects the starting offset and target memory area
			that is accessible by the 1MB PMEM window at 0x700000.
			This is always unpaged and goes directly to VRAM / sysRAM.
			</doc>
			<bitfield high="23" low="0" shr="16" name="OFFSET"/>
			<bitfield high="25" low="24" name="TARGET" type="nv50_mem_target"/>
		</reg32>
		<reg32 offset="0x704" name="MEM_CHAN" variants="NV50:NVC0">
			<bitfield low="0" high="29" name="CHAN" type="nv50_channel"/>
			<bitfield pos="30" name="WHICH">
				<value value="0" name="PEEPHOLE"/>
				<value value="1" name="BAR"/>
			</bitfield>
		</reg32>
		<reg32 offset="0x708" name="BAR1_CTXDMA" variants="NV50:NVC0">
			<bitfield low="0" high="15" name="INST" shr="4"/>
			<bitfield pos="31" name="ENABLE"/>
		</reg32>
		<reg32 offset="0x70c" name="BAR3_CTXDMA" variants="NV50:NVC0">
			<bitfield low="0" high="15" name="INST" shr="4"/>
			<bitfield pos="31" name="ENABLE"/>
		</reg32>
		<reg32 offset="0x710" name="PEEPHOLE_CTXDMA" variants="NV50:NVC0">
			<bitfield low="0" high="15" name="INST" shr="4"/>
			<bitfield pos="31" name="ENABLE"/>
		</reg32>
		<reg32 offset="0x704" name="BAR1_CHAN" variants="NVC0-">
			<bitfield low="0" high="27" name="INST" shr="12"/>
			<bitfield pos="31" name="ENABLE"/>
		</reg32>
		<reg32 offset="0x714" name="BAR3_CHAN" variants="NVC0-">
			<bitfield low="0" high="27" name="INST" shr="12"/>
			<bitfield pos="31" name="ENABLE"/>
		</reg32>
		<reg32 offset="0x718" name="PEEPHOLE_CHAN" variants="NVC0-">
			<bitfield low="0" high="27" name="INST" shr="12"/>
			<bitfield pos="31" name="ENABLE"/>
		</reg32>
	</array>

	<array offset="0x60000" name="PPEEPHOLE" stride="0x10000" length="1" variants="NV84-">
		<doc>A small area that allows single peeks/pokes into the VRAM.
		The address is paged.</doc>
		<reg32 offset="0" name="UNK0000" variants="NV50:NVC0"/>
		<reg32 offset="4" name="UNK0004" variants="NV50:NVC0"/>
		<reg32 offset="0xc" name="ADDR_HIGH" variants="NVC0-"/>
		<reg32 offset="0x10" name="ADDR_LOW">
			<doc>Virtual address to poke.</doc>
		</reg32>
		<reg32 offset="0x14" name="DATA">
			<doc>Goes to the memory at address pointed to by ADDR.
			Auto-increments ADDR on each access.</doc>
		</reg32>
	</array>

	<reg8 offset="0x80000" name="PBUS_PMS_NEW_CODE" length="0x200" variants="NV92-"/>

	<array offset="0x88000" name="PBUS_PCI" stride="0x1000" length="1" variants="NV40-">
	</array>

	<array offset="0x101000" name="PEXTDEV" stride="0x1000" length="1">
	</array>

	<reg8 offset="0x110000" name="PROM" length="0x10000" variants="NV03:NV04" />

	<array offset="0x2ff000" name="PBRIDGE_PCI" stride="0x1000" length="1" variants="NVAA NVAC NVAF">
	</array>

	<reg8 offset="0x300000" name="PROM" length="0x10000" variants="NV04-" />

	<reg8 offset="0x700000" name="PRAMIN" length="0x100000" variants="NV04:NV50" />

	<reg8 offset="0x700000" name="PMEM" length="0x100000" variants="NV50-" />

</domain>

<!-- 000000 - 000fff PMC covered above -->

<!-- 001000 - 001fff PBUS covered above -->

<!-- 002000 - 003fff PFIFO -->
<import file="nv_pfifo.xml" />
<import file="nvc0_pfifo.xml" />

<!-- 004000 - 004fff ??? -->

<!-- 005000 - 005fff ??? -->

<!-- 008000 - 008fff PVIDEO -->
<import file="nv10_pvideo.xml" />

<!-- 009000 - 009fff PTIMER -->
<import file="nv_ptimer.xml" />

<!-- 00a000 - 00afff PCOUNTER -->
<import file="nv10_pcounter.xml" />
<import file="nv40_pcounter.xml" />

<!-- 00b000 - 00bfff PVPE -->
<import file="nv17_pvpe.xml" />

<!-- 00c000 - 00cfff ??? -->

<!-- 00d000 - 00dfff PTV -->
<import file="nv17_ptv.xml" />

<!-- 00e000 - 00efff PCONNECTOR -->
<import file="nv50_pconnector.xml" />

<!-- 00f000 - 00ffff PVP covered in nv17_pvpe.xml -->

<!-- 020000 - 020fff PTHERM -->
<import file="nv50_ptherm.xml" />

<!-- 021000 - 021fff ??? -->

<!-- 022000 - 022fff ??? -->

<!-- 040000 - 045fff PFIFO_CHAN covered in nvc0_pfifo.xml -->

<!-- 060000 - 060fff PEEPHOLE covered above -->

<!-- 070000 - 070fff PFIFO_MAGIC_FLUSH covered in nv_pfifo.xml -->

<!-- 080000 - 080fff PBUS_PMS_NEW_CODE covered above -->

<!-- 082000 - 082fff ??? -->

<!-- 084000 - 084fff PBSP -->
<import file="nv98_pvp.xml" />

<!-- 085000 - 085fff PVP covered in nv98_pvp.xml -->

<!-- 086000 - 086fff PPPP covered in nv98_pvp.xml -->

<!-- 087000 - 087fff PCRYPT covered in nv98_pvp.xml -->

<!-- 088000 - 088fff PBUS_PCI covered above -->

<!-- 089000 - 089fff ??? -->

<!-- 08a000 - 08afff ??? -->

<!-- 090000 - 090fff PFIFO_CACHE1 covered in nv_pfifo.xml -->

<!-- 0a0000 - 0bffff PRM -->
<import file="nv_vga.xml" />

<!-- 100000 - 100fff PFB or PFFB -->
<import file="nv03_pfb.xml" />

<!-- 101000 - 101fff PEXTDEV covered above -->

<!-- 102000 - 102fff PCRYPT -->
<import file="nv84_pcrypt.xml" />

<!-- 103000 - 103fff PBSP -->
<import file="nv84_pbsp.xml" />

<!-- 104000 - 104fff PCOPY covered in nv98_pvp.xml -->

<!-- 105000 - 105fff PCOPY2 covered in nv98_pvp.xml -->

<!-- 108000 - 109fff ??? -->

<!-- 10a000 - 10afff PDAEMON -->
<import file="nva3_pdaemon.xml" />

<!-- 10c000 - 10efff ??? -->

<!-- 10f000 - 112fff ??? [NVA5] -->

<!-- 10f000 - 11ffff PBFB covered in nv03_fb.xml -->

<!-- 120000 - 12ffff ??? -->

<!-- 130000 - 13afff ??? -->

<!-- 13b000 - 13efff PGUNK13B -->
<import file="nvc0_pgunk13b.xml" />

<!-- 140000 - 17ffff PRUNK140 -->
<import file="nvc0_prunk140.xml" />

<!-- 180000 - 1bffff PGUNK180 covered in nvc0_pgraph.xml -->

<!-- 200000 - 200fff PMEDIA -->
<import file="nv_pmedia.xml" />

<!-- 2ff000 - 2fffff PBRIDGE_PCI covered above -->

<!-- 300000 - 3fffff PROM covered above -->

<!-- 400000 - 5fffff PGRAPH -->
<import file="nv04_pgraph.xml" />
<import file="nv50_pgraph.xml" />
<import file="nvc0_pgraph.xml" />

<!-- 601000 - 601fff PRMCIO covered in nv_vga.xml -->

<!-- 610000 - 6bffff PDISPLAY -->
<import file="nv50_pdisplay.xml" />

<!-- 700000 - 7fffff PRAMIN / PMEM covered above -->

<!-- 800000 - ffffff USER covered in nv_pfifo.xml -->

<!-- and NV01 crap, which doesn't fit in the above ordering... -->
<import file="nv01_misc.xml" />

</database>
