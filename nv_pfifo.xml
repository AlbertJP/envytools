<?xml version="1.0" encoding="UTF-8"?>
<database xmlns="http://nouveau.freedesktop.org/"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://nouveau.freedesktop.org/ rules-ng.xsd">
<import file="copyright.xml"/>

<import file="nvchipsets.xml" />
<import file="nv50_defs.xml" />

<enum name="nv04_pfifo_channel_mode" inline="yes">
	<value value="0" name="PIO"/>
	<value value="1" name="DMA"/>
</enum>
<enum name="nv04_pfifo_channel_size" inline="yes">
	<value value="0" name="124"/>
	<value value="1" name="512"/>
</enum>
<enum name="nv04_pfifo_engine" inline="yes">
	<value value="0" name="SOFTWARE"/>
	<value value="1" name="PGRAPH"/>
	<!-- multiple sources claim here that 2 == DVD, but
	I can't seem to find the damn thing... -->
</enum>

<domain name="NV_MMIO" bare="yes" prefix="chipset">
	<array offset="0x2000" name="PFIFO" stride="0x2000" length="1" variants="NV01:NV84">
		<brief>Command submission engine</brief>
		<doc>PFIFO is the unit that gathers up commands sent by user and delivers them
		to execution units in an orderly fashion.

		The PFIFO is roughly split into three main pieces:
		<ul>
		<li>The PFIFO cache - the FIFO itself, holds commands in flight to execution unit.</li>
		<li>The PFIFO pusher - takes commands from user and inserts them into the cache.
		The pusher can be in PIO or DMA mode. In PIO mode, user pokes the commands directly
		through the USER MMIO area. In DMA mode, PFIFO fetches the commands from a buffer
		in memory, called the pushbuffer, and the USER MMIO area is only used to control pushbuffer
		fetching.</li>
		<li>The PFIFO puller - takes commands from cache, delivers them to execution unit.</li>
		</ul>

		On pre-NV50 cards, there are actually two sets of cache+pusher+puller, but the second
		set is somewhat crippled. It only has a single cache slot, its pusher only supports
		the PIO mode and doesn't seem to work anyway, and puller only has a single ctx slot
		on pre-NV04 cards. It can be used for quick manual injection of single commands, for
		example for software method emulation. The crippled set is called CACHE0, the proper
		set is called CACHE1.

		Central to the PFIFO is the concept of a "channel". Channel is basically an individual
		stream of commands. The channels are context-switched, and are fully independent. For
		saving PFIFO's own per-channel context, a memory structure called RAMFC is used. The
		execution units are context-switched in their own way. The PFIFO cache can only be set
		to a single channel at a time. Pre-NV50, it needs to be empty before the pusher can
		switch channels. Starting with NV50, it's instead saved to memory like other parts of
		PFIFO context on channel switch.

		PFIFO channels are switched by the pusher when it wants to insert commands for a new
		channel. Channel switch on execution units is requested by the puller when it actually
		delivers the commands. This means that PFIFO and execution units can be on different
		channels. The number of channels is 128 on NV01-NV03, 16 on NV04-NV05, 32 on NV10-NV3X,
		??? on NV4X, 128 on NV50+.

		The commands, as stored in cache, are basically tuples of subchannel, method, data.
		There are 8 subchannels on each channel, and they conceptually have so-called "objects"
		bound to them. The method is a number between 0 and 0x1ffc divisible by 4, and selects
		the command to execute. Set of available methods depends on the object bound to given
		subchannel. Method numbers are conceptually treated as if they were addresses of internal
		hardware registers which you write the data to, and hence are aligned to 4 bytes, but
		that's just a leftover from the olden days. Most methods are passed on raw to the execution
		engine, but some are special and are handled directly by PFIFO:

		<ul>
		<li>0x0000: Binds object to the subchannel</li>
		<li>0x0004-0x00fc: Methods reserved for use by PFIFO, never passed to execution engines.
		Documented in nv_objects.xml</li>
		<li>0x0180-0x01fc: Methods passed to execution engines, but with hash -> instance
		translation done on them [see puller doc].</li>
		</ul>

		The data values submitted to methods are 32-bit words, interpreted depending on the method.

		<b>The pusher</b>

		The pusher's task is to get values from user into the cache. It can be in PIO mode or DMA
		mode. PIO is supported on NV01-NV3X [maybe NV4X?], DMA is supported in a crippled form on
		NV03 and in serious form on NV04+.

		In both modes, user submits the methods through so-called USER MMIO area, starting at
		0x800000 on NV01-NV4X, at 0xc00000 on NV50+. This area is a big array of per-channel
		subareas. A single channel has size 0x10000 on NV01-NV3X, size 0x1000 on NV4X, size 0x2000
		on NV50+. The per-channel area is supposed to be mapped directly by the user program to
		submit commands.

		In PIO mode, commands are submitted by writing the data to address channel_base + subchannel
		* 0x2000 + method. Address channel_base + subchannel * 0x2000 + 0x10 is a special "free count"
		register, telling you the number of free bytes in the cache. Somewhat confusingly, free count
		and the cache get/put registers are counted in bytes, and only take into account the data bytes.
		Ie. a single method+data cache slot counts as 4 bytes.

		If, for any reason, the PIO pusher cannot write the command to the cache upon USER access,
		the failing access is instead stored to so-called RAMRO area. This includes pilot errors
		like writing to reserved method, writing something else than aligned 32-bit word, or writing
		over the free count, but also some conditions that happen naturally, like cache being taken
		by another channel atm. When RAMRO is written, the RUNOUT interrupt is triggered. When RAMRO
		overflows, the RUNOUT_OVERFLOW interrupt is triggered, and you're basically screwed.

		It should be noted that the PIO mode is inherently broken, due to race conditions. If you
		have several applications wanting to submit stuff simultanously, and cache is empty at the
		moment, the following can happen: 1. All apps read free count register and get, say, 0x7c.
		2. All apps figure that they can safely send 0x7c/4 commands, and do so. 3. The first app
		to submit a command causes the cache to be switched to its channel, and the remaining apps'
		commands land in RAMRO. If there are sufficiently many applications, this can overflow
		RAMRO before you have a chance to handle the RUNOUT interrupt. You lost.

		NV03 introduced DMA "mode", where the PFIFO fetches commands from memory by itself, instead
		of poking them manually. NV03 and NV04 only supported fetching commands from PCI/AGP
		memory, NV05 and later also support fetching them from VRAM. On NV03, there's no actual DMA
		"mode". Instead, you have to manually switch the PFIFO to the correct channel, set the 
		DMA registers to point to the command buffer, poke tha launch register, and wait for completion.
		The NV03 command buffers consist of "packets", consisting of 32-bit packet header, and series
		of 32-bit data values. The header consists of starting method address, subchannel, and data
		count. Subsequent data count words will be poked into sequential methods starting from the
		one given in packet header. Multiple packets can be submitted by a single launch.

		On NV04, the old DMA was scrapped, and a new sane DMA mode was introduced. The DMA/PIO mode
		can now be selected per-channel. When in DMA mode, there are per-channel DMA_PUT and DMA_GET
		registers. DMA_GET represents GPU's current position in the command buffer, DMA_PUT
		represents its end. Whenever DMA_PUT != DMA_GET, and PFIFO has some time, it'll
		automatically switch to the given channel and read commands from DMA_GET address,
		incrementing it until it hits DMA_PUT. Command buffers can store packets like on NV03,
		as well as the all-new jump command, moving DMA_GET to another place. The DMA_PUT and DMA_GET
		registers are accessible through the USER area, and the usual way to submit commands is by
		having a ring buffer with commands, writing new commands after the current end position, and
		incrementing DMA_PUT to make GPU read them. When nearing the end of the ring buffer, a jump
		command back to its beginning is inserted.

		Subsequent cards added more capabilities to the pusher. On NV10+, a new non-increasing packet
		type was introduced, behaving like the original NV03 packet, but instead of writing to sequential
		methods, it pokes all data values into a single method. On NV11+, call + return commands
		were added. NV40+ have a conditional command that disables method submission if a mask given
		in the command AND mask stored in a PFIFO register evaluates to 0, used for selecting a single
		card for a portion of the command buffer in SLI config. NV50+ Has a new non-increasing packet 
		format that allows much more data values to be submitted in a single piece.

		NV50 also introduced all-new indirect DMA mode. In this mode, instead of being controlled
		through DMA_GET/DMA_PUT and the jump/call/return commands, the command buffers are instead
		specified by a special indirect buffer. This IB buffer is a ring buffer of (address, word count)
		tuples, controlled by IB_GET/IB_PUT registers like the old DMA_GET/DMA_PUT ones, but wrapping
		back to beginning implicitely without need for a jump command. This new mode, in conjuction
		with the new non-increasing packet type, allows submitting large raw blocks of data directly
		through the PFIFO, by putting the packet header in one area of memory referenced by first IB
		slot, and setting the next IB slot to point directly to the submitted data.

		<b>The puller</b>

		The puller's task is to take the subchannel, method, data tuples from cache and get them
		to execute. For most methods, specifically 0x0100-0x017c and 0x0200-0x1ffc ranges, this
		involves submitting the tuple directly to the relevant execution engine, but others need
		more attention.

		First, there's a concept of "FIFO objects". The FIFO objects are small chunks of memory
		residing in RAMIN on NV03-NV4X cards, and in the channel area on NV50+. FIFO objects
		are specified by so-called handles, which are arbitrary 32-bit identifiers. The handles
		are mapped to so-called contexts by a big hash table known as RAMHT. The context resides
		in the RAMHT and is a 32-bit word. The objects are per-channel: on pre-NV50, object's 
		channel id is part of the context. On NV50+, channels have separate RAMHTs.

		On NV01, the only types of objects are graph objects. These are the things bound to PFIFO
		subchannels. The context consists of engine type [software or PGRAPH], object type [for
		use by PGRAPH], plus some simple settings like color format to use for rendering. The
		contexts for currently bound subchannels are stored in PFIFO or RAMFC, and are also passed
		on to PGRAPH on subchannel bind.

		NV03 works similarly, except the rendering settings are moved to the all-new instance
		memory aka RAMIN, and the context instead contains the object's address in RAMIN, aka
		instance address.

		NV04 introduced a new subtype of FIFO objects, the DMA objects. They aren't meant to be
		bound to subchannels, and represent areas of memory that PGRAPH or other engines can
		access on user's command. Method range 0x0180-0x01fc got reserved for methods taking
		an object handle as data, whether DMA objects or graph objects. Since PGRAPH and other
		execution engines don't know about RAMHT and object handles, PFIFO puller performs the
		handle -&gt; instance translation before submitting the command further. Also the object
		type is now part of instance memory, is called the object class, and the RAMHT context
		only consists of the object's instance address and the engine selector. The PFIFO doesn't
		care about object type anymore, and it's up to execution engines to read it and act on it.

		So how puller works... on NV01 and NV03, upon meeting method 0, the puller will look up
		the data in RAMHT as object handle, store the context in the per-subchannel CTX register,
		and tell the execution engine the new context. Upon meeting any other method, the
		puller will just send it down to whatever engine is selected by the relevant CTX register.
		Available engines are SOFTWARE and PGRAPH. When engine is SOFTWARE, the "submission"
		involves raising the CACHE_ERROR interrupt and waiting for the CPU to handle the situation.

		On NV04+, the CTX registers are gone, and the only information the PFIFO stores
		is what engine each subchannel is bound to. The actual object is expected to be remembered
		by the engine itself instead. When method 0 is encountered, the param is looked up in RAMHT,
		the engine is changed appropriately, and the instance address is sent to relevant execution
		engine as method 0. When method in range 0x180-0x1fc is encountered, param is also looked up
		and data is substituted with the instance address before submission to execution engine.
		Other 0x100-0x1ffc methods are just submitted. The 0x4-0xfc methods are special and are
		handled by puller itself. Note that the pusher will refuse to push 0x4-0xfc methods that
		the puller doesn't know about.

		On NV01-NV05 the commands from puller to engine are submitted one by one. On NV10+, as an
		optimisation, they can be submitted in pairs if both go to the same method, or if they go
		to sequential two methods.
		</doc>
		<reg32 offset="0x040" name="DELAY" variants="NV03-">
			<bitfield high="7" low="0" name="WAIT_RETRY" variants="NV03:NV04"/>
			<bitfield high="9" low="0" name="WAIT_RETRY" variants="NV04-"/>
			<bitfield high="31" low="28" name="UNK28" variants="NV40-"/>
		</reg32>
		<reg32 offset="0x044" name="DMA_TIMESLICE" variants="NV04-">
			<bitfield high="16" low="0" name="SELECT"/>
			<bitfield high="24" low="24" name="TIMEOUT"/>
			<bitfield high="31" low="28" name="UNK28" variants="NV40-"/>
		</reg32>
		<reg32 offset="0x048" name="PIO_TIMESLICE" variants="NV04:NV50">
			<bitfield high="16" low="0" name="SELECT"/>
			<bitfield high="24" low="24" name="TIMEOUT"/>
		</reg32>
		<reg32 offset="0x048" name="UNK48" variants="NV50-">
			<doc>Bits fffff, bit 19 seems forced to 0, Comes up as 90100. Blob sets 902000.</doc>
		</reg32>
		<reg32 offset="0x04c" name="TIMESLICE" variants="NV04-">
			<bitfield high="17" low="0" name="TIMER">
				<value value="0x3ffff" name="EXPIRED"/>
			</bitfield>
		</reg32>
		<reg32 offset="0x050" name="NEXT_CHANNEL" variants="NV04:NV50">
			<bitfield high="3" low="0" name="CHID" variants="NV04:NV10"/>
			<bitfield high="4" low="0" name="CHID" variants="NV10:NV40"/>
			<bitfield high="8" low="0" name="CHID" variants="NV40-"/>
			<bitfield high="8" low="8" name="MODE" variants="NV04:NV40" type="nv04_pfifo_channel_mode"/>
			<bitfield high="9" low="9" name="MODE" variants="NV40-" type="nv04_pfifo_channel_mode"/>
			<bitfield high="12" low="12" name="SWITCH"/>
		</reg32>
		<reg32 offset="0x054" name="UNK54" variants="NV11-">
			<bitfield high="9" low="0" name="UNK0">
				<doc>Reads as 2 on init.</doc>
			</bitfield>
			<bitfield high="31" low="28" name="UNK28" variants="NV40-"/>
		</reg32>
		<reg32 offset="0x058" name="SLI" variants="NV40-">
			<bitfield high="11" low="0" name="MASK"/>
			<bitfield high="28" low="28" name="ACTIVE"/>
			<bitfield high="29" low="29" name="UNK29"/>
		</reg32>
		<reg32 offset="0x080" name="DEBUG_0" variants="NV03-" access="r">
			<!-- XXX: this is getting more suspicious with each hw gen. -->
			<bitfield high="0" low="0" name="CACHE_ERROR0"/>
			<bitfield high="4" low="4" name="CACHE_ERROR1"/>
		</reg32>
		<reg32 offset="0x084" name="UNK84" variants="NV40-">
			<doc>Bits 0xffffffff. Comes up as 72f200 on NV50.</doc>
		</reg32>
		<reg32 offset="0x088" name="UNK88" variants="NV40-">
			<doc>Bits 0xffffffff. Goes to RAMFC.</doc>
		</reg32>
		<reg32 offset="0x08c" name="UNK8C" variants="NV50-">
			<doc>Bits 0xffffffff</doc>
		</reg32>
		<reg32 offset="0x090" name="UNK90" variants="NV50-">
			<doc>Bits 0xffffffff. Comes up as 443333 on NV50.</doc>
		</reg32>
		<reg32 offset="0x100" name="INTR">
			<bitfield high="0" low="0" name="CACHE_ERROR"/>
			<bitfield high="4" low="4" name="RUNOUT" variants="NV01:NV50"/>
			<bitfield high="4" low="4" name="BAR_FAULT" variants="NV50-"/>
			<bitfield high="6" low="6" name="PEEPHOLE_FAULT" variants="NV50-"/>
			<bitfield high="8" low="8" name="RUNOUT_OVERFLOW" variants="NV01:NV50"/>
			<bitfield high="8" low="8" name="UNK8" variants="NV50-"/>
			<bitfield high="12" low="12" name="DMA_PUSHER" variants="NV03-" />
			<bitfield high="16" low="16" name="DMA_PTE" variants="NV03:NV50" />
			<bitfield high="16" low="16" name="UNK16" variants="NV50-"/>
			<bitfield high="18" low="18" name="UNK18" variants="NV40-"/>
			<bitfield high="19" low="19" name="UNK19" variants="NV40-"/>
			<bitfield high="20" low="20" name="SEMAPHORE" variants="NV11-" />
			<bitfield high="21" low="21" name="UNK21" variants="NV40-"/>
			<bitfield high="22" low="22" name="UNK22" variants="NV40-"/>
			<bitfield high="23" low="23" name="UNK23" variants="NV40-"/>
			<bitfield high="24" low="24" name="ACQUIRE_TIMEOUT" variants="NV11:NV50" /> <!-- XXX: make sure. Also check on NV40. -->
			<bitfield high="24" low="24" name="UNK24" variants="NV50-"/>
			<bitfield high="25" low="25" name="UNK25" variants="NV50-"/>
			<bitfield high="26" low="26" name="UNK26" variants="NV50-"/>
			<bitfield high="27" low="27" name="UNK27" variants="NV50-"/>
			<bitfield high="28" low="28" name="UNK28" variants="NV50-"/>
			<bitfield high="29" low="29" name="UNK29" variants="NV50-"/>
		</reg32>
		<reg32 offset="0x140" name="INTR_EN">
			<bitfield high="0" low="0" name="CACHE_ERROR"/>
			<bitfield high="4" low="4" name="RUNOUT" variants="NV01:NV50"/>
			<bitfield high="4" low="4" name="BAR_FAULT" variants="NV50-"/>
			<bitfield high="6" low="6" name="PEEPHOLE_FAULT" variants="NV50-"/>
			<bitfield high="8" low="8" name="RUNOUT_OVERFLOW" variants="NV01:NV50"/>
			<bitfield high="8" low="8" name="UNK8" variants="NV50-"/>
			<bitfield high="12" low="12" name="DMA_PUSHER" variants="NV03-" />
			<bitfield high="16" low="16" name="DMA_PTE" variants="NV03:NV50" />
			<bitfield high="16" low="16" name="UNK16" variants="NV50-"/>
			<bitfield high="18" low="18" name="UNK18" variants="NV40-"/>
			<bitfield high="19" low="19" name="UNK19" variants="NV40-"/>
			<bitfield high="20" low="20" name="SEMAPHORE" variants="NV11-" />
			<bitfield high="21" low="21" name="UNK21" variants="NV40-"/>
			<bitfield high="22" low="22" name="UNK22" variants="NV40-"/>
			<bitfield high="23" low="23" name="UNK23" variants="NV40-"/>
			<bitfield high="24" low="24" name="ACQUIRE_TIMEOUT" variants="NV11:NV50" /> <!-- XXX: make sure. Also check on NV40. -->
			<bitfield high="24" low="24" name="UNK24" variants="NV50-"/>
			<bitfield high="25" low="25" name="UNK25" variants="NV50-"/>
			<bitfield high="26" low="26" name="UNK26" variants="NV50-"/>
			<bitfield high="27" low="27" name="UNK27" variants="NV50-"/>
			<bitfield high="28" low="28" name="UNK28" variants="NV50-"/>
			<bitfield high="29" low="29" name="UNK29" variants="NV50-"/>
		</reg32>
		<reg32 offset="0x200" name="CONFIG" variants="NV01:NV04">
			<bitfield high="1" low="0" name="FREE_LIE" variants="NV01">
				<value value="0" name="DISABLED"/>
				<value value="1" name="252_BYTES"/>
				<value value="2" name="508_BYTES"/>
				<value value="3" name="1020_BYTES"/>
			</bitfield>
			<bitfield high="10" low="8" name="FETCH_SIZE" variants="NV03-"/>
			<bitfield high="22" low="18" name="FETCH_TRIG" variants="NV03-"/>
		</reg32>
		<reg32 offset="0x210" name="RAMHT" variants="NV03-">
			<bitfield high="15" low="12" name="ADDRESS" variants="NV03:NV04" shr="12"/>
			<bitfield high="8" low="4" name="ADDRESS" variants="NV04:NV50" shr="12"/>
			<bitfield high="15" low="0" name="INSTANCE" variants="NV50-" shr="4"/>
			<bitfield high="17" low="16" name="SIZE">
				<value value="0" name="4K"/>
				<value value="1" name="8K"/>
				<value value="2" name="16K"/>
				<value value="3" name="32K"/>
			</bitfield>
			<bitfield high="23" low="18" name="UNK18" variants="NV50-"/>
			<bitfield high="25" low="24" name="SEARCH" variants="NV04-">
				<value value="0" name="16"/>
				<value value="1" name="32"/>
				<value value="2" name="64"/>
				<value value="3" name="128"/>
			</bitfield>
			<bitfield high="26" low="26" name="UNK26" variants="NV34-"/>
			<bitfield high="28" low="27" name="UNK27" variants="NV50-"/>
		</reg32>
		<reg32 offset="0x214" name="RAMFC" variants="NV03:NV40">
			<bitfield high="15" low="9" name="ADDRESS" variants="NV03:NV04" shr="9"/>
			<bitfield high="8" low="1" name="ADDRESS" variants="NV04:NV10" shr="9"/>
			<bitfield high="8" low="2" name="ADDRESS" variants="NV10-" shr="10"/>
			<bitfield high="16" low="16" name="LARGE" variants="NV11-"/>
			<bitfield high="23" low="17" name="UNK17" variants="NV17-">
				<doc>Init to 0x45.</doc>
			</bitfield>
			<bitfield high="24" low="24" name="UNK24" variants="NV17:NV20 NV25-"/>
		</reg32>
		<reg32 offset="0x218" name="RAMRO" variants="NV03:NV50">
			<bitfield high="15" low="9" name="ADDRESS" variants="NV03:NV04" shr="9"/>
			<bitfield high="8" low="1" name="ADDRESS" variants="NV04-" shr="9"/>
			<bitfield high="16" low="16" name="SIZE">
				<value value="0" name="512"/>
				<value value="1" name="8K"/>
			</bitfield>
		</reg32>
		<reg32 offset="0x21c" name="UNK21C" variants="NV40:NV50">
			<bitfield high="0" low="0" name="UNK0"/>
			<bitfield high="12" low="4" name="UNK4"/>
		</reg32>
		<reg32 offset="0x220" name="UNK220" variants="NV40:NV50">
			<bitfield high="7" low="0" name="UNK0" variants="NV40:NV44"/>
			<bitfield high="12" low="0" name="UNK0" variants="NV44-"/>
			<bitfield high="23" low="16" name="UNK16"/>
		</reg32>

		<reg32 offset="0x230" name="UNK230" variants="NV44-">
			<bitfield high="1" low="0" name="UNK0"/>
		</reg32>

		<reg32 offset="0x400" name="RUNOUT_STATUS" variants="NV01:NV50">
			<bitfield high="0" low="0" name="RANOUT" />
			<bitfield high="4" low="4" name="EMPTY" />
			<bitfield high="8" low="8" name="FULL" />
		</reg32>
		<reg32 offset="0x410" name="RUNOUT_PUT" variants="NV01:NV50"/>
		<reg32 offset="0x420" name="RUNOUT_GET" variants="NV01:NV50"/>

		<reg32 offset="0x500" name="CACHES">
			<bitfield high="0" low="0" name="REASSIGN"/>
			<bitfield high="1" low="1" name="UNK1" variants="NV50-"/>
			<bitfield high="4" low="4" name="DMA_SUSPEND_BUSY" variants="NV04-"/>
			<bitfield high="8" low="8" name="UNK8" variants="NV50-"/>
		</reg32>
		<reg32 offset="0x504" name="CHANNEL_MODE" variants="NV04:NV50">
			<bitfield high="0" low="0" name="0" type="nv04_pfifo_channel_mode"/>
			<bitfield high="1" low="1" name="1" type="nv04_pfifo_channel_mode"/>
			<bitfield high="2" low="2" name="2" type="nv04_pfifo_channel_mode"/>
			<bitfield high="3" low="3" name="3" type="nv04_pfifo_channel_mode"/>
			<bitfield high="4" low="4" name="4" type="nv04_pfifo_channel_mode"/>
			<bitfield high="5" low="5" name="5" type="nv04_pfifo_channel_mode"/>
			<bitfield high="6" low="6" name="6" type="nv04_pfifo_channel_mode"/>
			<bitfield high="7" low="7" name="7" type="nv04_pfifo_channel_mode"/>
			<bitfield high="8" low="8" name="8" type="nv04_pfifo_channel_mode"/>
			<bitfield high="9" low="9" name="9" type="nv04_pfifo_channel_mode"/>
			<bitfield high="10" low="10" name="10" type="nv04_pfifo_channel_mode"/>
			<bitfield high="11" low="11" name="11" type="nv04_pfifo_channel_mode"/>
			<bitfield high="12" low="12" name="12" type="nv04_pfifo_channel_mode"/>
			<bitfield high="13" low="13" name="13" type="nv04_pfifo_channel_mode"/>
			<bitfield high="14" low="14" name="14" type="nv04_pfifo_channel_mode"/>
			<bitfield high="15" low="15" name="15" type="nv04_pfifo_channel_mode"/>
			<bitfield high="16" low="16" name="16" variants="NV10-" type="nv04_pfifo_channel_mode"/>
			<bitfield high="17" low="17" name="17" variants="NV10-" type="nv04_pfifo_channel_mode"/>
			<bitfield high="18" low="18" name="18" variants="NV10-" type="nv04_pfifo_channel_mode"/>
			<bitfield high="19" low="19" name="19" variants="NV10-" type="nv04_pfifo_channel_mode"/>
			<bitfield high="20" low="20" name="20" variants="NV10-" type="nv04_pfifo_channel_mode"/>
			<bitfield high="21" low="21" name="21" variants="NV10-" type="nv04_pfifo_channel_mode"/>
			<bitfield high="22" low="22" name="22" variants="NV10-" type="nv04_pfifo_channel_mode"/>
			<bitfield high="23" low="23" name="23" variants="NV10-" type="nv04_pfifo_channel_mode"/>
			<bitfield high="24" low="24" name="24" variants="NV10-" type="nv04_pfifo_channel_mode"/>
			<bitfield high="25" low="25" name="25" variants="NV10-" type="nv04_pfifo_channel_mode"/>
			<bitfield high="26" low="26" name="26" variants="NV10-" type="nv04_pfifo_channel_mode"/>
			<bitfield high="27" low="27" name="27" variants="NV10-" type="nv04_pfifo_channel_mode"/>
			<bitfield high="28" low="28" name="28" variants="NV10-" type="nv04_pfifo_channel_mode"/>
			<bitfield high="29" low="29" name="29" variants="NV10-" type="nv04_pfifo_channel_mode"/>
			<bitfield high="30" low="30" name="30" variants="NV10-" type="nv04_pfifo_channel_mode"/>
			<bitfield high="31" low="31" name="31" variants="NV10-" type="nv04_pfifo_channel_mode"/>
		</reg32>
		<reg32 offset="0x508" name="CHANNEL_DMA_PENDING" variants="NV04:NV50">
			<bitfield high="0" low="0" name="0"/>
			<bitfield high="1" low="1" name="1"/>
			<bitfield high="2" low="2" name="2"/>
			<bitfield high="3" low="3" name="3"/>
			<bitfield high="4" low="4" name="4"/>
			<bitfield high="5" low="5" name="5"/>
			<bitfield high="6" low="6" name="6"/>
			<bitfield high="7" low="7" name="7"/>
			<bitfield high="8" low="8" name="8"/>
			<bitfield high="9" low="9" name="9"/>
			<bitfield high="10" low="10" name="10"/>
			<bitfield high="11" low="11" name="11"/>
			<bitfield high="12" low="12" name="12"/>
			<bitfield high="13" low="13" name="13"/>
			<bitfield high="14" low="14" name="14"/>
			<bitfield high="15" low="15" name="15"/>
			<bitfield high="16" low="16" name="16" variants="NV10-"/>
			<bitfield high="17" low="17" name="17" variants="NV10-"/>
			<bitfield high="18" low="18" name="18" variants="NV10-"/>
			<bitfield high="19" low="19" name="19" variants="NV10-"/>
			<bitfield high="20" low="20" name="20" variants="NV10-"/>
			<bitfield high="21" low="21" name="21" variants="NV10-"/>
			<bitfield high="22" low="22" name="22" variants="NV10-"/>
			<bitfield high="23" low="23" name="23" variants="NV10-"/>
			<bitfield high="24" low="24" name="24" variants="NV10-"/>
			<bitfield high="25" low="25" name="25" variants="NV10-"/>
			<bitfield high="26" low="26" name="26" variants="NV10-"/>
			<bitfield high="27" low="27" name="27" variants="NV10-"/>
			<bitfield high="28" low="28" name="28" variants="NV10-"/>
			<bitfield high="29" low="29" name="29" variants="NV10-"/>
			<bitfield high="30" low="30" name="30" variants="NV10-"/>
			<bitfield high="31" low="31" name="31" variants="NV10-"/>
		</reg32>
		<reg32 offset="0x50c" name="CHANNEL_SIZE" variants="NV04:NV50">
			<bitfield high="0" low="0" name="0" type="nv04_pfifo_channel_size"/>
			<bitfield high="1" low="1" name="1" type="nv04_pfifo_channel_size"/>
			<bitfield high="2" low="2" name="2" type="nv04_pfifo_channel_size"/>
			<bitfield high="3" low="3" name="3" type="nv04_pfifo_channel_size"/>
			<bitfield high="4" low="4" name="4" type="nv04_pfifo_channel_size"/>
			<bitfield high="5" low="5" name="5" type="nv04_pfifo_channel_size"/>
			<bitfield high="6" low="6" name="6" type="nv04_pfifo_channel_size"/>
			<bitfield high="7" low="7" name="7" type="nv04_pfifo_channel_size"/>
			<bitfield high="8" low="8" name="8" type="nv04_pfifo_channel_size"/>
			<bitfield high="9" low="9" name="9" type="nv04_pfifo_channel_size"/>
			<bitfield high="10" low="10" name="10" type="nv04_pfifo_channel_size"/>
			<bitfield high="11" low="11" name="11" type="nv04_pfifo_channel_size"/>
			<bitfield high="12" low="12" name="12" type="nv04_pfifo_channel_size"/>
			<bitfield high="13" low="13" name="13" type="nv04_pfifo_channel_size"/>
			<bitfield high="14" low="14" name="14" type="nv04_pfifo_channel_size"/>
			<bitfield high="15" low="15" name="15" type="nv04_pfifo_channel_size"/>
			<bitfield high="16" low="16" name="16" variants="NV10-" type="nv04_pfifo_channel_size"/>
			<bitfield high="17" low="17" name="17" variants="NV10-" type="nv04_pfifo_channel_size"/>
			<bitfield high="18" low="18" name="18" variants="NV10-" type="nv04_pfifo_channel_size"/>
			<bitfield high="19" low="19" name="19" variants="NV10-" type="nv04_pfifo_channel_size"/>
			<bitfield high="20" low="20" name="20" variants="NV10-" type="nv04_pfifo_channel_size"/>
			<bitfield high="21" low="21" name="21" variants="NV10-" type="nv04_pfifo_channel_size"/>
			<bitfield high="22" low="22" name="22" variants="NV10-" type="nv04_pfifo_channel_size"/>
			<bitfield high="23" low="23" name="23" variants="NV10-" type="nv04_pfifo_channel_size"/>
			<bitfield high="24" low="24" name="24" variants="NV10-" type="nv04_pfifo_channel_size"/>
			<bitfield high="25" low="25" name="25" variants="NV10-" type="nv04_pfifo_channel_size"/>
			<bitfield high="26" low="26" name="26" variants="NV10-" type="nv04_pfifo_channel_size"/>
			<bitfield high="27" low="27" name="27" variants="NV10-" type="nv04_pfifo_channel_size"/>
			<bitfield high="28" low="28" name="28" variants="NV10-" type="nv04_pfifo_channel_size"/>
			<bitfield high="29" low="29" name="29" variants="NV10-" type="nv04_pfifo_channel_size"/>
			<bitfield high="30" low="30" name="30" variants="NV10-" type="nv04_pfifo_channel_size"/>
			<bitfield high="31" low="31" name="31" variants="NV10-" type="nv04_pfifo_channel_size"/>
		</reg32>
		<reg32 offset="0x510" name="UNK510" length="16" variants="NV40:NV50">
			<doc>Bits 0xffffffff.</doc>
		</reg32>
		<reg32 offset="0x504" name="FREEZE" variants="NV50-">
			<bitfield high="0" low="0" name="ENABLE"/>
			<bitfield high="4" low="4" name="FROZEN"/>
		</reg32>
		<reg32 offset="0x508" name="UNK508" variants="NV50-">
		</reg32>
		<reg32 offset="0x50c" name="UNK50c" variants="NV50-">
			<doc>Bits 0xffffffff. nv sets to 6f3cfc34.</doc>
		</reg32>
		<reg32 offset="0x510" name="UNK510_CHAN" variants="NV50-" type="nv50_channel"/>
		<reg32 offset="0x514" name="UNK514_CHAN" variants="NV50-" type="nv50_channel"/>
		<reg32 offset="0x518" name="UNK518" variants="NV50-">
		</reg32>
		<reg32 offset="0x51c" name="ENGINE_IDLE" variants="NV50-">
			<bitfield high="0" low="0" name="PGRAPH"/>
			<bitfield high="1" low="1" name="UNK1"/>
			<bitfield high="2" low="2" name="UNK2"/>
			<bitfield high="3" low="3" name="UNK3"/>
		</reg32>

		<reg32 offset="0x600" name="CHAN_TABLE" length="128" variants="NV50">
			<bitfield high="29" low="0" name="CHAN" type="nv50_channel"/>
			<bitfield high="30" low="30" name="PENDING"/>
			<bitfield high="31" low="31" name="ENABLE"/>
		</reg32>

		<reg32 offset="0x800" name="DEVICE" variants="NV01:NV50">
			<!-- XXX: check on later cards. seems there are 128 copies of this. -->
			<bitfield high="6" low="0" name="CHID" variants="NV01:NV04"/>
			<bitfield high="3" low="0" name="CHID" variants="NV04:NV10"/>
			<bitfield high="4" low="0" name="CHID" variants="NV10:NV40"/>
			<bitfield high="8" low="0" name="CHID" variants="NV40-"/>
			<bitfield high="24" low="24" name="SWITCH_AVAILABLE"/>
		</reg32>

		<reg32 offset="0x800" name="UNK800" variants="NV50-">
			<bitfield high="6" low="0" name="UNK0"/>
			<bitfield high="16" low="16" name="UNK16"/>
			<bitfield high="31" low="31" name="UNK31"/>
		</reg32>
		<reg32 offset="0x804" name="UNK804" length="2" variants="NV50-"/>

		<reg32 offset="0x900" name="UNK900" length="2" variants="NV50-"/>
		<reg32 offset="0x908" name="UNK908" variants="NV50-">
			<bitfield high="31" low="4" name="UNK4"/>
		</reg32>
		<reg32 offset="0x90c" name="UNK90C" variants="NV50-">
			<bitfield high="7" low="0" name="UNK0"/>
			<bitfield high="20" low="16" name="UNK16"/>
			<bitfield high="25" low="24" name="UNK24"/>
		</reg32>
		<reg32 offset="0x910" name="UNK910" variants="NV50-">
			<bitfield high="4" low="0" name="UNK0"/>
			<bitfield high="20" low="16" name="UNK16"/>
		</reg32>
		<reg32 offset="0x914" name="UNK914" variants="NV50-">
			<bitfield high="1" low="0" name="UNK0"/>
			<bitfield high="9" low="4" name="UNK4"/>
			<bitfield high="14" low="12" name="UNK12"/>
			<bitfield high="17" low="16" name="UNK16"/>
			<bitfield high="22" low="19" name="UNK19"/>
			<bitfield high="25" low="24" name="UNK24"/>
		</reg32>

		<array offset="0x1000" length="1" stride="0x200" name="CACHE0" variants="NV01:NV50">
			<reg32 offset="0x000" name="PUSH0">
				<bitfield high="0" low="0" name="ACCESS"/>
			</reg32>
			<reg32 offset="0x004" name="PUSH1" variants="NV03-">
				<bitfield high="6" low="0" name="CHID" variants="NV01:NV04"/>
				<bitfield high="3" low="0" name="CHID" variants="NV04:NV10"/>
				<bitfield high="4" low="0" name="CHID" variants="NV10:NV40"/>
				<bitfield high="8" low="0" name="CHID" variants="NV40-"/>
			</reg32>
			<reg32 offset="0x010" name="PUT" variants="NV03-"/>
			<reg32 offset="0x010" name="PUSH1" variants="NV01">
				<bitfield high="6" low="0" name="CHID"/>
			</reg32>
			<reg32 offset="0x014" name="STATUS" variants="NV03-">
				<bitfield high="0" low="0" name="RANOUT"/>
				<bitfield high="4" low="4" name="EMPTY"/>
				<bitfield high="8" low="8" name="FULL"/>
			</reg32>
			<reg32 offset="0x030" name="PUT" variants="NV01"/>
			<reg32 offset="0x040" name="PULL0" variants="NV01:NV04">
				<bitfield high="0" low="0" name="ACCESS"/>
				<bitfield high="4" low="4" name="HASH">
					<value value="0" name="SUCCEEDED"/>
					<value value="1" name="FAILED"/>
				</bitfield>
				<bitfield high="8" low="8" name="DEVICE">
					<value value="0" name="HARDWARE"/>
					<value value="1" name="SOFTWARE"/>
				</bitfield>
			</reg32>
			<reg32 offset="0x050" name="PULL0" variants="NV04-">
				<bitfield high="0" low="0" name="ACCESS"/>
				<bitfield high="4" low="4" name="HASH">
					<value value="0" name="SUCCEEDED"/>
					<value value="1" name="FAILED"/>
				</bitfield>
				<bitfield high="8" low="8" name="DEVICE">
					<value value="0" name="HARDWARE"/>
					<value value="1" name="SOFTWARE"/>
				</bitfield>
				<bitfield high="12" low="12" name="HASH_BUSY"/>
			</reg32>
			<reg32 offset="0x050" name="PULL1" variants="NV01:NV04">
				<bitfield high="8" low="8" name="OBJECT">
					<value value="0" name="UNCHANGED"/>
					<value value="1" name="CHANGED"/>
				</bitfield>
			</reg32>
			<reg32 offset="0x054" name="PULL1" variants="NV04-">
				<bitfield high="3" low="0" name="ENGINE" type="nv04_pfifo_engine"/>
			</reg32>
			<reg32 offset="0x058" name="HASH" variants="NV04-">
				<bitfield high="15" low="0" name="INSTANCE" variants="NV04:NV40"/>
				<bitfield high="16" low="16" name="VALID" variants="NV04:NV40"/>
				<bitfield high="23" low="0" name="INSTANCE" variants="NV40-"/>
				<bitfield high="24" low="24" name="VALID" variants="NV40-"/>
			</reg32>
			<reg32 offset="0x070" name="GET"/>
			<reg32 offset="0x080" name="CTX" variants="NV01:NV04"/>
			<reg32 offset="0x080" name="ENGINE" variants="NV04-">
				<bitfield high="3" low="0" name="0" type="nv04_pfifo_engine"/>
				<bitfield high="7" low="4" name="0" type="nv04_pfifo_engine"/>
				<bitfield high="11" low="8" name="0" type="nv04_pfifo_engine"/>
				<bitfield high="15" low="12" name="0" type="nv04_pfifo_engine"/>
				<bitfield high="19" low="16" name="0" type="nv04_pfifo_engine"/>
				<bitfield high="23" low="20" name="0" type="nv04_pfifo_engine"/>
				<bitfield high="27" low="24" name="0" type="nv04_pfifo_engine"/>
				<bitfield high="31" low="28" name="0" type="nv04_pfifo_engine"/>
			</reg32>
			<reg32 offset="0x100" name="ADDR">
				<bitfield high="12" low="2" name="MTHD" shr="2"/>
				<bitfield high="15" low="13" name="SUBCH"/>
			</reg32>
			<reg32 offset="0x104" name="DATA"/>
		</array>

		<array offset="0x1200" length="1" stride="0xe00" name="CACHE1">
			<reg32 offset="0x000" name="PUSH0">
				<bitfield high="0" low="0" name="ACCESS"/>
			</reg32>
			<reg32 offset="0x004" name="PUSH1" variants="NV03-">
				<bitfield high="6" low="0" name="CHID" variants="NV01:NV04"/>
				<bitfield high="3" low="0" name="CHID" variants="NV04:NV10"/>
				<bitfield high="4" low="0" name="CHID" variants="NV10:NV40"/>
				<bitfield high="8" low="0" name="CHID" variants="NV40:NV50"/>
				<bitfield high="6" low="0" name="CHID" variants="NV50-"/>
				<bitfield high="8" low="8" name="MODE" variants="NV04:NV40" type="nv04_pfifo_channel_mode"/>
				<bitfield high="16" low="16" name="MODE" variants="NV40:NV50" type="nv04_pfifo_channel_mode"/>
				<bitfield high="16" low="16" name="UNK16" variants="NV50-"/>
			</reg32>
			<reg32 offset="0x010" name="PUT" variants="NV03-"/>
			<reg32 offset="0x010" name="PUSH1" variants="NV01">
				<bitfield high="6" low="0" name="CHID"/>
			</reg32>
			<reg32 offset="0x014" name="STATUS" variants="NV03-">
				<bitfield high="0" low="0" name="RANOUT"/>
				<bitfield high="4" low="4" name="EMPTY"/>
				<bitfield high="8" low="8" name="FULL"/>
			</reg32>
			<reg32 offset="0x018" name="DMA_STATE" variants="NV03:NV04">
				<bitfield high="12" low="2" name="METHOD" shr="2"/>
				<bitfield high="15" low="13" name="SUBCHANNEL"/>
				<bitfield high="28" low="18" name="METHOD_COUNT"/>
				<bitfield high="30" low="30" name="ERROR">
					<!-- XXX: what are NV03 values? -->
				</bitfield>
			</reg32>
			<reg32 offset="0x020" name="DMA_PUSH" variants="NV03:NV04"/>
			<reg32 offset="0x024" name="DMA_COUNT" variants="NV03:NV04"/>
			<reg32 offset="0x028" name="DMA_GET" variants="NV03:NV04"/>
			<reg32 offset="0x02c" name="DMA_TARGET" variants="NV03:NV04">
				<value value="2" name="PCI" />
				<value value="3" name="AGP" /> <!-- guess... -->
			</reg32>
			<reg32 offset="0x030" name="DMA_TLB_TAG" variants="NV03:NV04"/>
			<reg32 offset="0x034" name="DMA_TLB_PTE" variants="NV03:NV04"/>
			<reg32 offset="0x038" name="DMA_PT_INST" variants="NV03:NV04"/>
			<reg32 offset="0x030" name="PUT" variants="NV01:NV03"/>
			<reg32 offset="0x040" name="PULL0" variants="NV01:NV04">
				<bitfield high="0" low="0" name="ACCESS"/>
				<bitfield high="4" low="4" name="HASH">
					<value value="0" name="SUCCEEDED"/>
					<value value="1" name="FAILED"/>
				</bitfield>
				<bitfield high="8" low="8" name="DEVICE">
					<value value="0" name="HARDWARE"/>
					<value value="1" name="SOFTWARE"/>
				</bitfield>
			</reg32>
			<reg32 offset="0x020" name="DMA_PUSH" variants="NV04-">
				<bitfield high="0" low="0" name="ACCESS"/>
				<bitfield high="4" low="4" name="BUSY"/>
				<bitfield high="8" low="8" name="EMPTY"/>
				<bitfield high="12" low="12" name="SUSPENDED"/>
				<bitfield high="16" low="16" name="UNK16" variants="NV11-"/>
				<!-- XXX: NV50 has many funky status bitfields here which someone should figure out some day. -->
				<bitfield high="31" low="24" name="UNK24" variants="NV40-"/>
			</reg32>
			<reg32 offset="0x024" name="DMA_FETCH" variants="NV04-">
				<bitfield high="7" low="3" name="TRIG"/>
				<bitfield high="15" low="13" name="SIZE"/>
				<bitfield high="19" low="16" name="MAX_REQS" variants="NV04:NV05"/>
				<bitfield high="20" low="16" name="MAX_REQS" variants="NV05:NV40"/>
				<bitfield high="22" low="16" name="MAX_REQS" variants="NV40-"/>
				<bitfield high="30" low="30" name="IB_ENABLE" variants="NV50-"/>
				<bitfield high="31" low="31" name="ENDIAN" variants="NV11:NV50">
					<value value="0" name="LITTLE" />
					<value value="1" name="BIG" />
				</bitfield>
			</reg32>
			<reg32 offset="0x028" name="DMA_STATE" variants="NV04-">
				<bitfield high="0" low="0" name="NONINC" variants="NV10-"/>
				<bitfield high="1" low="1" name="UNK1" variants="NV50-"/>
				<bitfield high="12" low="2" name="METHOD" shr="2"/>
				<bitfield high="15" low="13" name="SUBCHANNEL"/>
				<bitfield high="16" low="16" name="UNK16" variants="NV40:NV50"/>
				<bitfield high="16" low="16" name="LARGE_NONINCR_LEN_PENDING" variants="NV50-"/>
				<bitfield high="17" low="17" name="SUBROUTINE_ACTIVE" variants="NV40-"/>
				<bitfield high="18" low="18" name="UNK18" variants="NV50-"/>
				<bitfield high="28" low="18" name="METHOD_COUNT" variants="NV04:NV50"/>
				<bitfield high="31" low="29" name="ERROR">
					<value value="0" name="NONE"/>
					<value value="1" name="CALL" variants="NV11-"/>
					<value value="2" name="NON_CACHE"/>
					<value value="3" name="RETURN" variants="NV11-"/>
					<value value="4" name="RESERVED_CMD"/>
					<value value="5" name="IB" variants="NV50-"/>
					<value value="6" name="PROTECTION"/>
				</bitfield>
			</reg32>
			<reg32 offset="0x02c" name="DMA_INSTANCE" variants="NV04-" shr="4"/>
			<reg32 offset="0x030" name="DMA_CTL" variants="NV04:NV50">
				<bitfield high="11" low="2" name="ADJUST" shr="2"/>
				<bitfield high="12" low="12" name="PT_PRESENT"/>
				<bitfield high="13" low="13" name="PT_LINEAR"/>
				<bitfield high="17" low="16" name="TARGET">
					<value value="0" name="NVM" variants="NV05-"/>
					<value value="2" name="PCI"/>
					<value value="3" name="AGP"/>
				</bitfield>
				<bitfield high="31" low="31" name="VALID"/>
			</reg32>
			<reg32 offset="0x034" name="DMA_LIMIT" variants="NV04-"/>
			<reg32 offset="0x038" name="DMA_TLB_TAG" variants="NV04:NV50"/>
			<reg32 offset="0x03c" name="DMA_TLB_PTE" variants="NV04:NV50"/>
			<reg32 offset="0x040" name="DMA_PUT" variants="NV04-"/> <!-- XXX: NV50 has bits 0-1. do they do anything? -->
			<reg32 offset="0x044" name="DMA_GET" variants="NV04-"/>
			<reg32 offset="0x048" name="REF" variants="NV10-"/>
			<reg32 offset="0x04c" name="SUBROUTINE" variants="NV11-">
				<bitfield high="0" low="0" name="ACTIVE" variants="NV11:NV40"/>
				<bitfield high="31" low="2" name="RETURN" shr="2"/>
			</reg32>
			<reg32 offset="0x050" name="PULL0" variants="NV04-">
				<bitfield high="0" low="0" name="ACCESS"/>
				<bitfield high="4" low="4" name="HASH">
					<value value="0" name="SUCCEEDED"/>
					<value value="1" name="FAILED"/>
				</bitfield>
				<bitfield high="8" low="8" name="DEVICE">
					<value value="0" name="HARDWARE"/>
					<value value="1" name="SOFTWARE"/>
				</bitfield>
				<bitfield high="12" low="12" name="HASH_BUSY"/>
				<bitfield high="16" low="16" name="ACQUIRE_BUSY" variants="NV11-"/>
				<bitfield high="20" low="20" name="SEMAPHORE_ERROR" variants="NV11-">
					<value value="0" name="NONE"/>
					<!-- XXX: figure out wtf they mean. Doesn't seem to be consistent. -->
					<value value="1" name="BAD_ARGUMENT"/>
					<value value="2" name="INVALID_STATE"/>
					<value value="3" name="UNK3" variants="NV50"/>
					<value value="4" name="PROTECTION" variants="NV50"/>
				</bitfield>
				<bitfield high="31" low="28" name="STATUS" variants="NV50-">
					<!-- XXX: figure this out -->
				</bitfield>
			</reg32>
			<reg32 offset="0x050" name="PULL1" variants="NV01:NV04">
				<bitfield high="2" low="0" name="SUBCHANNEL"/>
				<bitfield high="4" low="4" name="CTX">
					<value value="0" name="CLEAN"/>
					<value value="1" name="DIRTY"/>
				</bitfield>
				<bitfield high="8" low="8" name="OBJECT">
					<value value="0" name="UNCHANGED"/>
					<value value="1" name="CHANGED"/>
				</bitfield>
			</reg32>
			<reg32 offset="0x054" name="PULL1" variants="NV04-">
				<bitfield high="3" low="0" name="ENGINE" type="nv04_pfifo_engine"/>
				<bitfield high="4" low="4" name="ACQUIRE_ACTIVE" variants="NV11-"/>
				<bitfield high="17" low="16" name="SEMAPHORE_TARGET" variants="NV11:NV50">
					<value value="0" name="NVM"/>
					<value value="2" name="PCI"/>
					<value value="3" name="AGP"/>
				</bitfield>
			</reg32>
			<reg32 offset="0x058" name="HASH" variants="NV04-">
				<bitfield high="15" low="0" name="INSTANCE" variants="NV04:NV40 NV50-"/>
				<bitfield high="16" low="16" name="VALID" variants="NV04:NV40"/>
				<bitfield high="23" low="0" name="INSTANCE" variants="NV40:NV50"/>
				<bitfield high="24" low="24" name="VALID" variants="NV40:NV50"/>
			</reg32>
			<reg32 offset="0x060" name="ACQUIRE_TIMEOUT" variants="NV11-">
				<bitfield high="30" low="0" name="TIMEOUT"/>
				<bitfield high="31" low="31" name="UNK31" variants="NV50-"/>
			</reg32>
			<reg32 offset="0x064" name="ACQUIRE_TIMESTAMP" variants="NV11-"/>
			<reg32 offset="0x068" name="ACQUIRE_VALUE" variants="NV11-"/>
			<reg32 offset="0x06c" name="SEMAPHORE" variants="NV11:NV50">
				<bitfield high="0" low="0" name="CTXDMA_VALID"/>
				<bitfield high="11" low="2" name="OFFSET" shr="2"/>
				<bitfield high="31" low="12" name="PAGE" shr="12"/>
			</reg32>
			<reg32 offset="0x06c" name="SEMAPHORE" variants="NV50-">
				<bitfield high="13" low="0" name="OFFSET" shr="2"/>
				<bitfield high="14" low="14" name="OFFSET_VALID"/>
				<bitfield high="31" low="16" name="DMA_INST" shr="4"/>
			</reg32>
			<reg32 offset="0x070" name="GET"/>
			<reg32 offset="0x080" name="CTX" stride="0x10" length="8" variants="NV01:NV04"/>
			<reg32 offset="0x080" name="ENGINE" variants="NV04-">
				<bitfield high="3" low="0" name="0" type="nv04_pfifo_engine"/>
				<bitfield high="7" low="4" name="0" type="nv04_pfifo_engine"/>
				<bitfield high="11" low="8" name="0" type="nv04_pfifo_engine"/>
				<bitfield high="15" low="12" name="0" type="nv04_pfifo_engine"/>
				<bitfield high="19" low="16" name="0" type="nv04_pfifo_engine"/>
				<bitfield high="23" low="20" name="0" type="nv04_pfifo_engine"/>
				<bitfield high="27" low="24" name="0" type="nv04_pfifo_engine"/>
				<bitfield high="31" low="28" name="0" type="nv04_pfifo_engine"/>
			</reg32>
			<reg32 offset="0x0a0" name="DMA_DCOUNT_SHADOW" variants="NV05-"/>
			<reg32 offset="0x0a4" name="DMA_GET_JMP_SHADOW" variants="NV05-"/>
			<reg32 offset="0x0a8" name="DMA_RSVD_SHADOW" variants="NV05-"/>
			<reg32 offset="0x0ac" name="DMA_DATA_SHADOW" variants="NV05-"/>
			<reg32 offset="0x0b0" length="4" name="UNK0B0" variants="NV17:NV40"/>
			<reg32 offset="0x0c0" name="UNK0C0" variants="NV17:NV20 NV25:NV40">
				<doc>Bits 0xffff.</doc>
			</reg32>
			<reg32 offset="0x0e0" name="GRCTX_INST" variants="NV40:NV50"/>
			<reg32 offset="0x0e4" name="UNK0E4" variants="NV44:NV50">
				<doc>Set to 1. Goes to RAMFC.</doc>
			</reg32>
			<reg32 offset="0x0e4" name="UNK0E4" variants="NV50-">
				<doc>Some sort of counter. Goes to RAMFC.</doc>
			</reg32>
			<reg32 offset="0x0e8" name="UNK0E8" variants="NV40:NV50">
				<doc>Bits ffffffff. Goes to RAMFC.</doc>
			</reg32>
			<reg32 offset="0x0ec" name="PLAYLIST_LEN" variants="NV50-">
				<doc>Writes are queued... somehow.</doc>
				<bitfield high="7" low="0" name="LEN"/>
				<bitfield high="8" low="8" name="UNK8"/>
			</reg32>
			<reg32 offset="0x0f0" name="UNK0F0" variants="NV50-">
				<doc>RO. Seems to be the current channel id...</doc>
			</reg32>
			<reg32 offset="0x0f4" name="UNK0F4" variants="NV40:NV50">
				<doc>Bits 1, set to 1.</doc>
			</reg32>
			<reg32 offset="0x0f4" name="PLAYLIST" variants="NV50-">
				<doc>Writes are queued... somehow</doc>
				<bitfield high="27" low="0" name="ADDRESS" shr="12"/>
				<bitfield high="29" low="28" name="TARGET" type="nv50_mem_target"/>
			</reg32>
			<reg32 offset="0x0fc" name="UNK0FC" variants="NV50-">
				<doc>RO. Sort of.</doc>
			</reg32>
			<reg32 offset="0x100" name="UNK100" variants="NV40:NV50">
				<doc>Bits 1. Goes to RAMFC.</doc>
			</reg32>
			<reg32 offset="0x104" name="UNK104" variants="NV40-">
				<doc>RO, reads as 3.</doc>
			</reg32>
			<reg32 offset="0x108" name="UNK108" variants="NV50-">
				<doc>RO, reads as 0.</doc>
			</reg32>
			<reg32 offset="0x10c" name="UNK10C" length="3" variants="NV40:NV50">
				<doc>Bits ffffff.</doc>
			</reg32>
			<reg32 offset="0x10c" name="UNK10C" variants="NV50-">
				<doc>RO, reads as 0 or 2.</doc>
			</reg32>
			<reg32 offset="0x110" name="UNK110" variants="NV50-">
				<doc>Bits 0xffffffff.</doc>
			</reg32>
			<reg32 offset="0x114" name="UNK114" variants="NV50-">
				<doc>Bits 3.</doc>
			</reg32>
			<reg32 offset="0x118" name="UNK118" variants="NV50-">
				<doc>Bits 7. Reads as 2.</doc>
			</reg32>

			<reg32 offset="0x120" name="DMA_PUT_HIGH" variants="NV50-"/>
			<reg32 offset="0x128" name="DMA_GET_HIGH" variants="NV50-"/>
			<reg32 offset="0x130" name="IB_PUT" variants="NV50-"/>
			<reg32 offset="0x134" name="IB_GET" variants="NV50-"/>
			<reg32 offset="0x140" name="IB_ADDRESS_LOW" variants="NV50-"/>
			<reg32 offset="0x144" name="IB_CONFIG" variants="NV50-">
				<bitfield high="7" low="0" name="ADDRESS_HIGH"/>
				<bitfield high="15" low="8" name="UNK8"/>
				<bitfield high="31" low="16" name="ORDER"/> <!-- XXX: check exact vals and bfs -->
			</reg32>
			<reg32 offset="0x164" name="METHOD_COUNT" variants="NV50-"/>
			<reg32 offset="0x168" name="DMA_SHGET" variants="NV50-"/> <!-- XXX: wtf is that? -->
			<reg32 offset="0x16c" name="DMA_SHGET_HIGH" variants="NV50-">
				<bitfield high="7" low="0" name="ADDR_HIGH"/>
				<bitfield high="31" low="31" name="UNK31"/>
			</reg32>
			<reg32 offset="0x170" name="DMA_GET_HIGH_RDSHADOW" variants="NV50-"/>
			<reg32 offset="0x174" name="DMA_PUT_HIGH_RDSHADOW" variants="NV50-"/>
			<reg32 offset="0x178" name="DMA_PUT_HIGH_WRSHADOW" variants="NV50-"/>
			<reg32 offset="0x17c" name="DMA_SHGET_HIGH_RDSHADOW" variants="NV50-"/>
			
			<reg32 offset="0x100" name="ADDR" stride="0x8" length="32" variants="NV01:NV03P">
				<bitfield high="12" low="2" name="MTHD" shr="2"/>
				<bitfield high="15" low="13" name="SUBCH"/>
			</reg32>
			<reg32 offset="0x104" name="DATA" stride="0x8" length="32" variants="NV01:NV03P"/>
			<reg32 offset="0x200" name="ADDR" stride="0x8" length="64" variants="NV03P:NV04">
				<bitfield high="12" low="2" name="MTHD" shr="2"/>
				<bitfield high="15" low="13" name="SUBCH"/>
			</reg32>
			<reg32 offset="0x204" name="DATA" stride="0x8" length="64" variants="NV03P:NV04"/>
			<reg32 offset="0x600" name="ADDR" stride="0x8" length="256" variants="NV04:NV40">
				<doc>Note that the cache actually only has 128 entries,
				the higher 128 are aliases. This is done so that GET/PUT
				pointers can be unambigously set to X, X [CACHE empty],
				or X, X+400 [CACHE full].</doc>
				<bitfield high="0" low="0" name="NONINC" variants="NV10-"/>
				<bitfield high="12" low="2" name="MTHD" shr="2"/>
				<bitfield high="15" low="13" name="SUBCH"/>
			</reg32>
			<reg32 offset="0x604" name="DATA" stride="0x8" length="256" variants="NV04:NV40"/>
		</array>
	</array>

	<reg32 offset="0x90000" name="PFIFO_CACHE1_ADDR" stride="0x8" length="512" variants="NV40:NVC0">
		<bitfield high="0" low="0" name="NONINC" variants="NV10-"/>
		<bitfield high="12" low="2" name="MTHD" shr="2"/>
		<bitfield high="15" low="13" name="SUBCH"/>
	</reg32>
	<reg32 offset="0x90004" name="PFIFO_CACHE1_DATA" stride="0x8" length="512" variants="NV40:NVC0"/>

	<array offset="0x800000" name="USER" stride="0x10000" length="128" variants="NV01:NV04">
		<array offset="0x0" name="SUBCHAN" stride="0x2000" length="8">
			<reg32 offset="0x10" name="FREE" access="r"/>
		</array>
	</array>

	<array offset="0x800000" name="USER" stride="0x10000" length="16" variants="NV04:NV10">
		<array offset="0x0" name="SUBCHAN" stride="0x2000" length="8">
			<reg32 offset="0x10" name="FREE" access="r"/>
			<reg32 offset="0x40" name="DMA_PUT" access="w"/>
			<reg32 offset="0x44" name="DMA_GET" access="r"/>
		</array>
	</array>

	<array offset="0x800000" name="USER" stride="0x10000" length="32" variants="NV10:NV50">
		<array offset="0x0" name="SUBCHAN" stride="0x2000" length="8">
			<reg32 offset="0x10" name="FREE" access="r"/>
			<reg32 offset="0x40" name="DMA_PUT" access="w"/>
			<reg32 offset="0x44" name="DMA_GET" access="r"/>
			<reg32 offset="0x48" name="REF" access="r"/>
		</array>
	</array>

	<array offset="0xc00000" name="USER_NEW" stride="0x1000" length="32" variants="NV40:NV50">
		<reg32 offset="0x40" name="DMA_PUT"/>
		<reg32 offset="0x44" name="DMA_GET" access="r"/>
		<reg32 offset="0x48" name="REF" access="r"/>
		<reg32 offset="0x54" name="SUBROUTINE" access="r"/>
	</array>

	<array offset="0xc00000" name="USER_NEW" stride="0x2000" length="128" variants="NV50-">
		<reg32 offset="0x40" name="DMA_PUT"/>
		<reg32 offset="0x44" name="DMA_GET" access="r"/>
		<reg32 offset="0x48" name="REF" access="r"/>
		<reg32 offset="0x4c" name="DMA_PUT_HIGH"/>
		<reg32 offset="0x54" name="SUBROUTINE" access="r"/>
		<reg32 offset="0x58" name="DMA_SHGET" access="r"/>
		<reg32 offset="0x5c" name="DMA_SHGET_HIGH" access="r"/>
		<reg32 offset="0x60" name="DMA_GET_HIGH" access="r"/>
		<reg32 offset="0x88" name="IB_GET" access="r"/>
		<reg32 offset="0x8c" name="IB_PUT"/>
	</array>

</domain>

</database>
