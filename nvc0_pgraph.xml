<?xml version="1.0" encoding="UTF-8"?>
<database xmlns="http://nouveau.freedesktop.org/"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://nouveau.freedesktop.org/ rules-ng.xsd">
<import file="copyright.xml"/>

<import file="nvchipsets.xml" />
<import file="nv98_fuc.xml" />

<domain name="NV_MMIO" bare="yes" prefix="chipset">

<array name="PGRAPH" offset="0x400000" stride="0x200000" length="1" variants="NVC0-">

	<reg32 offset="0x0100" name="INTR">
		<brief>Interrupt status</brief>
		<doc>Shows currently pending interrupts. Write 1 to a bit to reset it, and ACK the interrupt.</doc>
		<bitfield name="NOTIFY" pos="0">
			<doc>You asked for a NOTIFY with interrupt and got it.</doc>
		</bitfield>
		<bitfield name="QUERY" pos="1">
			<doc>You asked for a QUERY with interrupt and got it.</doc>
		</bitfield>
		<bitfield name="UNK02" pos="2" />
		<bitfield name="ILLEGAL_MTHD" pos="4">
			<doc>You tried to use a method that doesn't exist on this class.</doc>
		</bitfield>
		<bitfield name="ILLEGAL_CLASS" pos="5">
			<doc>You tried to use a class not supported by this GPU.</doc>
		</bitfield>
		<bitfield name="DOUBLE_NOTIFY" pos="6">
			<doc>You tried to use NOTIFY command on another NOTIFY command.</doc>
		</bitfield>
		<bitfield name="UNK7" pos="7" />
		<bitfield name="UNK8" pos="8" />
		<bitfield name="BUFFER_NOTIFY" pos="16">
			<doc>You asked for m2mf transfer with interrupt after finish and got it.</doc>
		</bitfield>
		<bitfield name="CTXCTL" pos="19">
			<doc>Triggered by poking CTXCTL INTR_UP_SET.</doc>
		</bitfield>
		<bitfield name="DATA_ERROR" pos="20">
			<doc>You used an invalid parameter for this method. Or maybe you tried
			to launch some operation, but the relevant state is inconsistent.
			Relevant state is in DATA_ERROR</doc>
		</bitfield>
		<bitfield name="TRAP" pos="21">
			<doc>A PGRAPH command failed in the middle of execution. TRAP register will
			tell you which subunit reports the trap.</doc>
		</bitfield>
		<bitfield name="SINGLE_STEP" pos="24" />
	</reg32>
	<reg32 offset="0x0108" name="TRAP">
		<brief>Trap status</brief>
		<doc>Like INTR, but applies to TRAP sub-types. Shows which subunits report trap.
		Each subunit has its own TRAP status register, which you have to check in turn
		to know the exact TRAP sub-subtype, and reset it. Write 1 to a bit to reset it
		and ACK the trap.
		
		If a bit applies to a per-TP subunit, you need to check all TPs to see which one
		is reporting the trap.</doc>
		<bitfield name="DISPATCH" pos="0">
			<brief>Check 404000</brief>
		</bitfield>
		<bitfield name="M2MF" pos="1">
			<brief>Check 404600</brief>
		</bitfield>
		<bitfield name="UNK2" pos="2"/>
		<bitfield name="UNK3" pos="3"/>
		<bitfield name="UNK4" pos="4"/>
		<bitfield name="UNK5" pos="5"/>
		<bitfield name="UNK6" pos="6"/>
		<bitfield name="UNK7" pos="7"/>
		<bitfield name="UNK24" pos="24"/>
		<bitfield name="UNK25" pos="25"/>
	</reg32>
	<reg32 offset="0x0110" name="DATA_ERROR" type="NV50_PGRAPH_DATA_ERROR">
		<doc>Stores type of the pending DATA_ERROR.</doc>
	</reg32>
	<reg32 offset="0x0138" name="TRAP_EN">
		<brief>Trap enable</brief>
		<doc>A bitmask of events that will cause traps, same bit assignments as in TRAP reg.</doc>
		<bitfield name="DISPATCH" pos="0" />
		<bitfield name="M2MF" pos="1" />
		<bitfield name="UNK2" pos="2"/>
		<bitfield name="UNK3" pos="3"/>
		<bitfield name="UNK4" pos="4"/>
		<bitfield name="UNK5" pos="5"/>
		<bitfield name="UNK6" pos="6"/>
		<bitfield name="UNK7" pos="7"/>
		<bitfield name="UNK24" pos="24"/>
		<bitfield name="UNK25" pos="25"/>
	</reg32>
	<reg32 offset="0x013c" name="INTR_EN">
		<brief>Interrupt enable</brief>
		<doc>A bitmask of events that will cause interrupts, same bit assignments as in INTR reg.</doc>
		<bitfield name="NOTIFY" pos="0" />
		<bitfield name="QUERY" pos="1" />
		<bitfield name="UNK02" pos="2" />
		<bitfield name="ILLEGAL_MTHD" pos="4" />
		<bitfield name="ILLEGAL_CLASS" pos="5" />
		<bitfield name="DOUBLE_NOTIFY" pos="6" />
		<bitfield name="UNK7" pos="7" />
		<bitfield name="UNK8" pos="8" />
		<bitfield name="BUFFER_NOTIFY" pos="16" />
		<bitfield name="CTXCTL" pos="19" />
		<bitfield name="DATA_ERROR" pos="20" />
		<bitfield name="TRAP" pos="21" />
		<bitfield name="SINGLE_STEP" pos="24" />
	</reg32>

	<reg32 offset="0x0200" name="ICMD_CMD" />
	<reg32 offset="0x0204" name="ICMD_DATA" />

	<stripe offset="0x0500" name="FIFO">
		<reg32 offset="0x00" name="CONTROL">
			<bitfield pos="0" name="PULL">
				<doc>Enables executing commands incoming through DISPATCH_CMD.</doc>
			</bitfield>
			<bitfield pos="8" name="UNK8"/>
			<bitfield pos="16" name="UNK16"/> <!-- usually set, but doesn't seem needed for operation... -->
			<bitfield high="28" low="20" name="LIMIT" variants="NV84-">
				<doc>Max number of slots allowed to be occupied in FIFO. 0 and > 0x100 are treated as 0x100.</doc>
			</bitfield>
		</reg32>
		<reg32 offset="0x04" name="STATUS" access="r">
			<bitfield pos="0" name="EMPTY" />
			<bitfield pos="1" name="FULL" />
			<bitfield high="15" low="4" name="OCCUPIED">
				<doc>How many slots contain valid data atm.</doc>
			</bitfield>
			<bitfield high="23" low="16" name="GET"/>
			<bitfield high="31" low="24" name="PUT"/>
		</reg32>
	</stripe>

	<reg32 offset="0x0700" name="STATUS" access="r">
	</reg32>

	<reg32 offset="0x0704" name="TRAPPED_ADDR">
		<doc>Offending subchan + method, for [most types of] PGRAPH interrupts.</doc>
		<bitfield name="MTHD" high="13" low="2" shr="2" />
		<bitfield name="SUBCH" high="18" low="16" />
	</reg32>
	<reg32 offset="0x0708" name="TRAPPED_DATA_LOW">
		<doc>Offending method data, for [most types of] PGRAPH interrupts.</doc>
	</reg32>
	<reg32 offset="0x070c" name="TRAPPED_DATA_HIGH" /> <!-- I have no idea what this is for. But it's been around since NV10. -->

	<array offset="0x4000" name="DISPATCH" stride="0x400" length="1">
		<reg32 offset="0x00" name="TRAP">
			<bitfield name="CLEAR" pos="30" />
			<bitfield name="ENABLE" pos="31" />
		</reg32>
		<reg32 offset="0x04" name="CMD_ADDR">
			<bitfield name="MTHD" high="12" low="2" shr="2" />
			<bitfield name="SUBCH" high="18" low="16" />
			<bitfield name="NONINCR" pos="20" />
			<bitfield name="UNK1" pos="21" /> <!-- sometimes set by DISPATCH itself during exec... related to NOTIFY? -->
			<bitfield name="SINGLE_STEP_DONE" pos="22" />
			<bitfield name="DOUBLE" pos="25" />
			<bitfield name="CURRENT_SUBCH" pos="29" />
			<bitfield name="VALID" pos="31" />
		</reg32>
		<reg32 offset="0x08" name="CMD_DATA_LOW" />
		<reg32 offset="0x0c" name="CMD_DATA_HIGH" />
		<reg32 offset="0x10" name="CTX_SWITCH" />
		<reg32 offset="0x24" name="SUBCH">
			<bitfield name="SUBCH" high="15" low="13" />
		</reg32>
		<reg32 offset="0x28" name="MISC">
			<bitfield name="NOTIFY_PENDING" pos="8" />
			<bitfield name="NOTIFY_AWAKEN" pos="16" />
		</reg32>
		<reg32 offset="0x2c" name="ST2_ADDR">
			<doc>Second stage of dispatch... if QUERY blows up on you,
			it can get stuck here. At least sometimes.</doc>
			<bitfield name="MTHD" high="12" low="2" shr="2" />
			<bitfield name="ILLEGAL_CLASS" pos="29" />
			<bitfield name="ILLEGAL_MTHD" pos="30" />
			<bitfield name="VALID" pos="31" />
		</reg32>

		<reg32 offset="0x3c" name="ST2_DATA_LOW" />
		<reg32 offset="0x40" name="ST2_DATA_HIGH" />

		<reg32 offset="0x48" name="ST3_ADDR">
			<bitfield name="MTHD" high="12" low="2" shr="2" />
			<bitfield name="VALID" pos="31" />
		</reg32>
		<reg32 offset="0x50" name="ST3_DATA_LOW" />
		<reg32 offset="0x54" name="ST3_DATA_HIGH" />

		<reg32 offset="0xc0" name="COND_ADDRESS_HIGH" />
		<reg32 offset="0xc4" name="COND_ADDRESS_LOW" />

		<reg32 offset="0xd0" name="NOTIFY_3D_ADDRESS_HIGH" /> <!-- also compute -->
		<reg32 offset="0xd4" name="NOTIFY_3D_ADDRESS_LOW" />
		<reg32 offset="0xd8" name="NOTIFY_2D_ADDRESS_HIGH" />
		<reg32 offset="0xdc" name="NOTIFY_2D_ADDRESS_LOW" />
		<reg32 offset="0xe0" name="NOTIFY_M2MF_ADDRESS_HIGH" />
		<reg32 offset="0xe4" name="NOTIFY_M2MF_ADDRESS_LOW" />

		<reg32 offset="0x200" name="CTX_CACHE" length="8" />
	</array>

	<group name="nvc0_ctxctl">
		<use-group name="nv98_fucbase"/>
		<reg32 offset="0x400" name="DONE">
			<doc>Reg saying when misc things are done.</doc>
			<bitfield pos="2" name="STRAND"/>
			<bitfield pos="5" name="MMCTX"/>
			<bitfield pos="6" name="MMIO_RD"/>
			<bitfield pos="7" name="UNK7">
				<doc>Related to MMIO write with UNK29</doc>
			</bitfield>
			<bitfield pos="8" name="BAR">
				<doc>When BAR_STATUS has all bits from BAR_REQMASK set.</doc>
			</bitfield>
			<bitfield pos="12" name="UNK12">
				<doc>Related to fuc+0xaxx and 404160.</doc>
			</bitfield>
		</reg32>
		<reg32 offset="0x40c" name="BAR_REQMASK"/>
		<reg32 offset="0x414" name="BAR_STATUS" access="r"/>
		<reg32 offset="0x414" name="BAR_AND" access="w"/>
		<reg32 offset="0x418" name="BAR_OR" access="w"/>

		<reg32 offset="0x500" name="WRCMD_DATA"/>
		<reg32 offset="0x504" name="WRCMD_CMD"/>

		<reg32 offset="0x620" name="NEW_CAPS">
			<bitfield low="0" high="7" name="CODE_SIZE" shr="8"/>
			<bitfield low="8" high="15" name="DATA_SIZE" shr="8"/>
		</reg32>

		<reg32 offset="0x700" name="MMCTX_SAVE_SWBASE" shr="8"/>
		<reg32 offset="0x704" name="MMCTX_LOAD_SWBASE" shr="8"/>
		<reg32 offset="0x710" name="MMCTX_BASE"/>
		<reg32 offset="0x714" name="MMCTX_CTRL">
			<bitfield low="0" high="4" name="QFREE"/>
			<bitfield low="8" high="12" name="QLIMIT"/>
			<bitfield pos="16" name="DIR">
				<value value="0" name="SAVE"/>
				<value value="1" name="LOAD"/>
			</bitfield>
			<!-- what do these two do, exactly? -->
			<bitfield pos="17" name="START_TRIGGER"/>
			<bitfield pos="18" name="STOP_TRIGGER"/>
		</reg32>
		<reg32 offset="0x718" name="MMCTX_MULTI_STRIDE"/>
		<reg32 offset="0x71c" name="MMCTX_MULTI_MASK"/>
		<reg32 offset="0x720" name="MMCTX_QUEUE">
			<bitfield pos="0" name="BASE_EN"/>
			<bitfield pos="1" name="MULTI_EN"/>
			<bitfield low="2" high="25" name="ADDR" shr="2"/>
			<bitfield low="26" high="31" name="CNTM1">
				<brief>count - 1</brief>
			</bitfield>
		</reg32>
		<reg32 offset="0x728" name="MMIO_CTRL">
			<bitfield pos="0" name="UNK0"/>
			<bitfield low="2" high="25" name="ADDR" shr="2"/>
			<bitfield pos="29" name="UNK29"/> <!-- only for writes? -->
			<bitfield pos="30" name="ACCESS">
				<value value="0" name="READ"/>
				<value value="1" name="WRITE"/>
			</bitfield>
			<bitfield pos="31" name="TRIGGER"/>
		</reg32>
		<reg32 offset="0x72c" name="MMIO_RDVAL"/>
		<reg32 offset="0x730" name="MMIO_WRVAL"/>
		<reg32 offset="0x74c" name="MMCTX_LOAD_COUNT"/> <!-- WTF? -->

		<reg32 offset="0x800" name="NEWSCRATCH" length="8"/>
		<reg32 offset="0x820" name="NEWSCRATCH_SET" length="8"/>
		<reg32 offset="0x840" name="NEWSCRATCH_CLEAR" length="8"/>
		<reg32 offset="0x880" name="STRANDS"/>

		<reg32 offset="0x908" name="STRAND_SAVE_SWBASE" shr="8"/>
		<reg32 offset="0x90c" name="STRAND_LOAD_SWBASE" shr="8"/>
		<reg32 offset="0x910" name="STRAND_SIZE">
			<doc>In words.</doc>
		</reg32>

		<reg32 offset="0xa04" name="XFER_BASE" shr="8"/>
	</group>

	<group name="nvc0_ropc">
	</group>

	<group name="nvc0_mp">
	</group>

	<group name="nvc0_tp">
		<array name="MP_BROADCAST" offset="0x1800" stride="0x800" length="1">
			<use-group name="nvc0_mp"/>
		</array>

		<array name="CTXCTL" offset="0x2000" stride="0x1000" length="1">
			<use-group name="nvc0_ctxctl"/>
			<reg32 offset="0x608" name="UNITS">
				<bitfield low="0" high="4" name="MPCOUNT"/>
				<bitfield low="16" high="20" name="UNK16"/>
			</reg32>
			<reg32 offset="0x618" name="MYINDEX"/>
		</array>

		<array name="MP" offset="0x4000" stride="0x800" length="4">
			<use-group name="nvc0_mp"/>
		</array>
	</group>

	<array name="CTXCTL" offset="0x9000" stride="0x1000" length="1">
		<use-group name="nvc0_ctxctl"/>
		<reg32 offset="0x604" name="UNITS">
			<bitfield low="0" high="4" name="TPCOUNT"/>
			<bitfield low="16" high="20" name="ROPCOUNT"/>
		</reg32>
		<reg32 offset="0xc18" name="INTR_UP_STATUS"/>
		<reg32 offset="0xc1c" name="INTR_UP_SET"/>
		<reg32 offset="0xc20" name="INTR_UP_CLEAR"/>
		<reg32 offset="0xc24" name="INTR_UP_ENABLE"/>
	</array>

	<array name="ROPC_BROADCAST" offset="0x8800" stride="0x400" length="1">
		<use-group name="nvc0_ropc"/>
	</array>

	<array name="ROPC" offset="0x10000" stride="0x400" length="8">
		<use-group name="nvc0_ropc"/>
	</array>

	<array name="TP_BROADCAST" offset="0x18000" stride="0x8000" length="1">
		<use-group name="nvc0_tp"/>
	</array>

	<array name="TP" offset="0x100000" stride="0x8000" length="4">
		<use-group name="nvc0_tp"/>
	</array>
</array>

<array name="PGUNK180" offset="0x180000" stride="0x40000" length="1" variants="NVC0-">
	<group name="pgunk180_unk1">

	</group>

	<group name="pgunk180_unk2">

	</group>

	<array name="TP_U1" offset="0" stride="0x1000" length="32">
		<use-group name="pgunk180_unk1"/>
	</array>

	<array name="ROPC_U1" offset="0x20000" stride="0x1000" length="16">
		<stripe stride="0x200" length="2">
			<use-group name="pgunk180_unk1"/>
		</stripe>
	</array>

	<array name="MAIN_U1" offset="0x30000" stride="0x200" length="8">
		<use-group name="pgunk180_unk1"/>
	</array>

	<array name="MAIN" offset="0x34000" stride="0x4000" length="1">

	</array>

	<array name="TP_U2" offset="0x38000" stride="0x200" length="32">
		<use-group name="pgunk180_unk2"/>
	</array>

	<array name="ROPC_U2" offset="0x3c000" stride="0x200" length="16">
		<use-group name="pgunk180_unk2"/>
	</array>

	<array name="MAIN_U2" offset="0x3e000" stride="0x200" length="1">
		<use-group name="pgunk180_unk2"/>
	</array>
</array>

</domain>

</database>
