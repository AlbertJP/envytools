= Introduction =

vµc is a microprocessor unit used as the second stage of the VP2 [in H.264
mode only], VP3 and VP4 video decoding pipelines. The same name is also used
to refer to the instruction set of this microprocessor. vµc's task is to read
decoded bitstream data written by BSP into the MBRING structure, do any
required calculations on this data, then construct instructions for the VP
stage regarding processing of the incoming macroblocks. The work required of
vµc is dependent on the codec and may include eg. motion vector derivation,
calculating quantization parameters, converting macroblock type to prediction
modes, etc.

On VP2, the vµc is located inside the PBSP engine [see vp2-pbsp.txt]. On VP3
and VP4, it is located inside the PVP engine [see fuc-vp.txt].

The vµc unit is made of the following subunits:

 - the vµc microcprocessor - oversees everything and does the calculations
   that are not performance-sensitive enough to be done in hardware
 - MBRING input and parsing circuitry - reads bitstream data parsed by the BSP
 - MVSURF input and output circuitry - the MVSURF is a storage buffer attached
   to all reference pictures in H.264 and to P pictures in VC-1, MPEG-4. It
   stores the motion vectors and other data used for direct prediction in B
   pictures. There are two MVSURFs that can be used: the output MVSURF that
   will store the data of the current picture, and the input MVSURF that
   should store the data for the first picture in L1 list [H.264] or the
   last P picture [other codecs]
 - VPRINGs output circuitry [VP2 only] - the VPRINGs are ring buffers filled
   by vµc with instructions for various VP subunits. There are three VPRINGs:
   VPRING_MBINFO used for prediction modes, transform modes and other misc
   information about the macroblock, VPRING_MV used for the motion vectors,
   and VPRING_COEFF used for transform coefficients.
 - direct VP connection [VP3, VP4 only] - the VP3+ vµc is directly connected
   to the VP engine, instead of relying on ring buffers in memory.


== The MMIO registers - VP2 ==

The vµc registers are located in PBSP XLMI space at addresses 0x08000:0x10000
[BAR0 addresses 0x103200:0x103400]. They are:

08000:0a000/103200:103280: DATA - vµc microprocessor data space
0a000/103280: ICNT - executed instructions counter, aliased to vµc special
              register $sr15 [$icnt]
0a100/103284: WDCNT - watchdog count - when ICNT reaches WDCNT value and WDCNT
              is not equal to 0xffff, a watchdog interrupt is raised
0a200/103288: CODE_CONTROL - code upload/download and execution control
0a300/10328c: CODE_WINDOW - code upload/download window
0a400/103290: H2V - a scratch register to pass data from host to vµc, aliased
              to vµc special register $sr4 [$h2v]
0a500/103294: V2H - a scratch register to pass data from vµc to host, aliased
              to vµc special register $sr5 [$v2h]
0a600/103298: PARM - sequence/picture/slice parameters required by vµc
              hardware, aliased to vµc special register $sr7 [$parm]
0a700/10329c: PC - the address of instruction currently executed by the
              microprocessor, aliased to vµc special register $sr8 [$pc]
0a800/1032a0: VPRING_COEFF.OFFSET - the VPRING_COEFF offset
0a900/1032a4: VPRING_COEFF.HALT_POS - the VPRING_COEFF halt position
0aa00/1032a8: VPRING_COEFF.WRITE_POS - the VPRING_COEFF write position
0ab00/1032ac: VPRING_COEFF.SIZE - the VPRING_COEFF size
0ac00/1032b0: VPRING_MV.OFFSET - the VPRING_MV offset
0ad00/1032b4: VPRING_MV.HALT_POS - the VPRING_MV halt position
0ae00/1032b8: VPRING_MV.WRITE_POS - the VPRING_MV write position
0af00/1032bc: VPRING_MV.SIZE - the VPRING_MV size
0b000/1032c0: VPRING_MBINFO.OFFSET - the VPRING_MBINFO offset
0b100/1032c4: VPRING_MBINFO.HALT_POS - the VPRING_MBINFO halt position
0b200/1032c8: VPRING_MBINFO.WRITE_POS - the VPRING_MBINFO write position
0b300/1032cc: VPRING_MBINFO.SIZE - the VPRING_MBINFO size
0b400/1032d0: VPRING_TRIGGER - flush/resume triggers the for VPRINGs
0b500/1032d4: INTR - interrupt status
0b600/1032d8: INTR_EN - interrupt enable mask
0b700/1032dc: VPRING_ENABLE - enables VPRING access
0b800/1032e0: MVSURF_IN_OFFSET - the offset of input MVSURF
0b900/1032e4: MVSURF_IN_PARAM - the parameters of input MVSURF
0ba00/1032e8: MVSURF_IN_LEFT - the macroblocks left in current line and lines
              left in the surface for input MVSURF
0bb00/1032ec: MVSURF_IN_POS - current position in input MVSURF
0bc00/1032f0: MVSURF_OUT_OFFSET - the offset of output MVSURF
0bd00/1032f4: MVSURF_OUT_PARAM - the parameters of output MVSURF
0be00/1032f8: MVSURF_OUT_LEFT - the macroblocks left in current line and lines
              left in the surface for output MVSURF
0bf00/1032fc: MVSURF_OUT_POS - current position in output MVSURF
0c000/103300: MBRING_OFFSET - the MBRING offset
0c100/103304: MBRING_SIZE - the MBRING size
0c200/103308: MBRING_READ_POS - the MBRING read position
0c300/10330c: MBRING_READ_AVAIL - the bytes left to read in MBRING


== The MMIO registers - VP3/VP4 ==

The vµc registers are located in PVP fµc IO space at addresses 0x10000:0x14000
[BAR0 addresses 0x085400:0x085500]. They are:

[XXX: list me]


== The vµc ISA ==

The vµc ISA is described in vuc-isa.txt.
